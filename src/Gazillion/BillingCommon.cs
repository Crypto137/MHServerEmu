// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace Gazillion {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class BillingCommon {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHCatalogEntryType__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHCatalogEntryType, global::Gazillion.MHCatalogEntryType.Builder> internal__static_Gazillion_MHCatalogEntryType__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHCatalogEntryTypeModifier__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHCatalogEntryTypeModifier, global::Gazillion.MHCatalogEntryTypeModifier.Builder> internal__static_Gazillion_MHCatalogEntryTypeModifier__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHBannerUrl__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHBannerUrl, global::Gazillion.MHBannerUrl.Builder> internal__static_Gazillion_MHBannerUrl__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHLocalizedCatalogUrls__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHLocalizedCatalogUrls, global::Gazillion.MHLocalizedCatalogUrls.Builder> internal__static_Gazillion_MHLocalizedCatalogUrls__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHLocalizedCatalogEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHLocalizedCatalogEntry, global::Gazillion.MHLocalizedCatalogEntry.Builder> internal__static_Gazillion_MHLocalizedCatalogEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHLocalizedCatalogEntryUrlOrData__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHLocalizedCatalogEntryUrlOrData, global::Gazillion.MHLocalizedCatalogEntryUrlOrData.Builder> internal__static_Gazillion_MHLocalizedCatalogEntryUrlOrData__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MHCatalogGuidEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHCatalogGuidEntry, global::Gazillion.MHCatalogGuidEntry.Builder> internal__static_Gazillion_MHCatalogGuidEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_MarvelHeroesCatalogEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.MarvelHeroesCatalogEntry, global::Gazillion.MarvelHeroesCatalogEntry.Builder> internal__static_Gazillion_MarvelHeroesCatalogEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_GiftHistoryEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.GiftHistoryEntry, global::Gazillion.GiftHistoryEntry.Builder> internal__static_Gazillion_GiftHistoryEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_GiftHistoryForPlayerEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.GiftHistoryForPlayerEntry, global::Gazillion.GiftHistoryForPlayerEntry.Builder> internal__static_Gazillion_GiftHistoryForPlayerEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_AwardItem__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.AwardItem, global::Gazillion.AwardItem.Builder> internal__static_Gazillion_AwardItem__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_AwardCouponDescription__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.AwardCouponDescription, global::Gazillion.AwardCouponDescription.Builder> internal__static_Gazillion_AwardCouponDescription__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_AwardCoupon__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.AwardCoupon, global::Gazillion.AwardCoupon.Builder> internal__static_Gazillion_AwardCoupon__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_AwardEntry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.AwardEntry, global::Gazillion.AwardEntry.Builder> internal__static_Gazillion_AwardEntry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatus__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.BillingPlayStationUpdateEntitlementStatus, global::Gazillion.BillingPlayStationUpdateEntitlementStatus.Builder> internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatus__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatusResponse__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.BillingPlayStationUpdateEntitlementStatusResponse, global::Gazillion.BillingPlayStationUpdateEntitlementStatusResponse.Builder> internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatusResponse__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_Gazillion_BillingPlayStationProcessPendingEntitlementTransactions__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::Gazillion.BillingPlayStationProcessPendingEntitlementTransactions, global::Gazillion.BillingPlayStationProcessPendingEntitlementTransactions.Builder> internal__static_Gazillion_BillingPlayStationProcessPendingEntitlementTransactions__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static BillingCommon() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChNCaWxsaW5nQ29tbW9uLnByb3RvEglHYXppbGxpb24iPgoSTUhDYXRhbG9n", 
            "RW50cnlUeXBlEhIKBG5hbWUYASACKAlSBG5hbWUSFAoFb3JkZXIYAiACKAVS", 
            "BW9yZGVyIkYKGk1IQ2F0YWxvZ0VudHJ5VHlwZU1vZGlmaWVyEhIKBG5hbWUY", 
            "ASACKAlSBG5hbWUSFAoFb3JkZXIYAiACKAVSBW9yZGVyIjMKC01IQmFubmVy", 
            "VXJsEhIKBHR5cGUYASACKAlSBHR5cGUSEAoDdXJsGAIgAigJUgN1cmwi2AEK", 
            "Fk1ITG9jYWxpemVkQ2F0YWxvZ1VybHMSGgoIbG9jYWxlSWQYASACKAlSCGxv", 
            "Y2FsZUlkEioKEHN0b3JlSG9tZVBhZ2VVcmwYAiABKAlSEHN0b3JlSG9tZVBh", 
            "Z2VVcmwSSAoTc3RvcmVCYW5uZXJQYWdlVXJscxgDIAMoCzIWLkdhemlsbGlv", 
            "bi5NSEJhbm5lclVybFITc3RvcmVCYW5uZXJQYWdlVXJscxIsChFzdG9yZVJl", 
            "YWxNb25leVVybBgEIAEoCVIRc3RvcmVSZWFsTW9uZXlVcmwisgEKF01ITG9j", 
            "YWxpemVkQ2F0YWxvZ0VudHJ5Eh8KC2xhbmd1YWdlX2lkGAEgAigJUgpsYW5n", 
            "dWFnZUlkEiAKC2Rlc2NyaXB0aW9uGAIgASgJUgtkZXNjcmlwdGlvbhIUCgV0", 
            "aXRsZRgDIAEoCVIFdGl0bGUSIAoLcmVsZWFzZURhdGUYBSABKAlSC3JlbGVh", 
            "c2VEYXRlEhwKCWl0ZW1QcmljZRgGIAIoA1IJaXRlbVByaWNlInMKIE1ITG9j", 
            "YWxpemVkQ2F0YWxvZ0VudHJ5VXJsT3JEYXRhEh8KC2xhbmd1YWdlX2lkGAEg", 
            "AigJUgpsYW5ndWFnZUlkEhAKA3VybBgCIAEoCVIDdXJsEhwKCWltYWdlZGF0", 
            "YRgDIAEoDFIJaW1hZ2VkYXRhIqMBChJNSENhdGFsb2dHdWlkRW50cnkSJAoN", 
            "cHJvdG90eXBlR3VpZBgBIAEoBFINcHJvdG90eXBlR3VpZBJICh9pdGVtUHJv", 
            "dG90eXBlUnVudGltZUlkRm9yQ2xpZW50GAIgASgEUh9pdGVtUHJvdG90eXBl", 
            "UnVudGltZUlkRm9yQ2xpZW50Eh0KCHF1YW50aXR5GAMgASgFOgExUghxdWFu", 
            "dGl0eSKkBAoYTWFydmVsSGVyb2VzQ2F0YWxvZ0VudHJ5EhQKBXNrdUlkGAEg", 
            "AigDUgVza3VJZBI7CglndWlkSXRlbXMYCSADKAsyHS5HYXppbGxpb24uTUhD", 
            "YXRhbG9nR3VpZEVudHJ5UglndWlkSXRlbXMSTwoTYWRkaXRpb25hbEd1aWRJ", 
            "dGVtcxgKIAMoCzIdLkdhemlsbGlvbi5NSENhdGFsb2dHdWlkRW50cnlSE2Fk", 
            "ZGl0aW9uYWxHdWlkSXRlbXMSTgoQbG9jYWxpemVkRW50cmllcxgFIAMoCzIi", 
            "LkdhemlsbGlvbi5NSExvY2FsaXplZENhdGFsb2dFbnRyeVIQbG9jYWxpemVk", 
            "RW50cmllcxJHCghpbmZvdXJscxgCIAMoCzIrLkdhemlsbGlvbi5NSExvY2Fs", 
            "aXplZENhdGFsb2dFbnRyeVVybE9yRGF0YVIIaW5mb3VybHMSTQoLY29udGVu", 
            "dGRhdGEYAyADKAsyKy5HYXppbGxpb24uTUhMb2NhbGl6ZWRDYXRhbG9nRW50", 
            "cnlVcmxPckRhdGFSC2NvbnRlbnRkYXRhEjEKBHR5cGUYBiABKAsyHS5HYXpp", 
            "bGxpb24uTUhDYXRhbG9nRW50cnlUeXBlUgR0eXBlEkkKDHR5cGVNb2RpZmll", 
            "chgHIAMoCzIlLkdhemlsbGlvbi5NSENhdGFsb2dFbnRyeVR5cGVNb2RpZmll", 
            "clIMdHlwZU1vZGlmaWVyIoYBChBHaWZ0SGlzdG9yeUVudHJ5EiQKDXRyYW5z", 
            "YWN0aW9uSWQYASABKANSDXRyYW5zYWN0aW9uSWQSFAoFc2t1SWQYAiACKANS", 
            "BXNrdUlkEhwKCXRpbWVzdGFtcBgDIAIoA1IJdGltZXN0YW1wEhgKB21lc3Nh", 
            "Z2UYBCABKAlSB21lc3NhZ2UiogEKGUdpZnRIaXN0b3J5Rm9yUGxheWVyRW50", 
            "cnkSLAoRcGxhdGZvcm1BY2NvdW50SWQYASABKANSEXBsYXRmb3JtQWNjb3Vu", 
            "dElkEhIKBG5hbWUYAiACKAlSBG5hbWUSQwoOaGlzdG9yeUVudHJpZXMYAyAD", 
            "KAsyGy5HYXppbGxpb24uR2lmdEhpc3RvcnlFbnRyeVIOaGlzdG9yeUVudHJp", 
            "ZXMiVwoJQXdhcmRJdGVtEhgKB2F3YXJkSWQYASACKAlSB2F3YXJkSWQSFAoF", 
            "c2t1SWQYAiACKANSBXNrdUlkEhoKCHF1YW50aXR5GAMgAigDUghxdWFudGl0", 
            "eSJWChZBd2FyZENvdXBvbkRlc2NyaXB0aW9uEhoKCGxvY2FsZUlkGAEgAigJ", 
            "Ughsb2NhbGVJZBIgCgtkZXNjcmlwdGlvbhgCIAIoCVILZGVzY3JpcHRpb24i", 
            "8AEKC0F3YXJkQ291cG9uEhoKCGNvdXBvbklkGAEgAigJUghjb3Vwb25JZBIa", 
            "CghkaXNjb3VudBgCIAIoAlIIZGlzY291bnQSIAoLY291cG9uU3RhdGUYAyAC", 
            "KAlSC2NvdXBvblN0YXRlEiwKEWV4cGlyYXRpb25EYXRlVXRjGAQgAigDUhFl", 
            "eHBpcmF0aW9uRGF0ZVV0YxJFCgxkZXNjcmlwdGlvbnMYBSADKAsyIS5HYXpp", 
            "bGxpb24uQXdhcmRDb3Vwb25EZXNjcmlwdGlvblIMZGVzY3JpcHRpb25zEhIK", 
            "BHdzZWMYBiACKANSBHdzZWMihAEKCkF3YXJkRW50cnkSHAoJYXdhcmRUeXBl", 
            "GAEgAigJUglhd2FyZFR5cGUSKAoEaXRlbRgCIAEoCzIULkdhemlsbGlvbi5B", 
            "d2FyZEl0ZW1SBGl0ZW0SLgoGY291cG9uGAMgASgLMhYuR2F6aWxsaW9uLkF3", 
            "YXJkQ291cG9uUgZjb3Vwb24iiQEKKUJpbGxpbmdQbGF5U3RhdGlvblVwZGF0", 
            "ZUVudGl0bGVtZW50U3RhdHVzEiQKDUVudGl0bGVtZW50SWQYASACKAlSDUVu", 
            "dGl0bGVtZW50SWQSGgoIVXNlQ291bnQYAiACKAVSCFVzZUNvdW50EhoKCFVz", 
            "ZUxpbWl0GAMgAigFUghVc2VMaW1pdCKtAQoxQmlsbGluZ1BsYXlTdGF0aW9u", 
            "VXBkYXRlRW50aXRsZW1lbnRTdGF0dXNSZXNwb25zZRIkCg1FbnRpdGxlbWVu", 
            "dElkGAEgAigJUg1FbnRpdGxlbWVudElkEhoKCFVzZUNvdW50GAIgAigFUghV", 
            "c2VDb3VudBIaCghVc2VMaW1pdBgDIAIoBVIIVXNlTGltaXQSGgoIQ29uc3Vt", 
            "ZWQYBCACKAhSCENvbnN1bWVkIjkKN0JpbGxpbmdQbGF5U3RhdGlvblByb2Nl", 
            "c3NQZW5kaW5nRW50aXRsZW1lbnRUcmFuc2FjdGlvbnMq0QQKF0J1eUl0ZW1S", 
            "ZXN1bHRFcnJvckNvZGVzEhwKGEJVWV9SRVNVTFRfRVJST1JfU1VDQ0VTUxAA", 
            "EigKJEJVWV9SRVNVTFRfRVJST1JfQUxSRUFEWV9IQVZFX0FWQVRBUhABEisK", 
            "J0JVWV9SRVNVTFRfRVJST1JfQUxSRUFEWV9IQVZFX1NUQVNIX0lOVhACEisK", 
            "J0JVWV9SRVNVTFRfRVJST1JfQUxSRUFEWV9IQVZFX1BFUk1BQlVGRhADEikK", 
            "JUJVWV9SRVNVTFRfRVJST1JfSU5TVUZGSUNJRU5UX0JBTEFOQ0UQBBIcChhC", 
            "VVlfUkVTVUxUX0VSUk9SX0lTX0dJRlQQBRImCiJCVVlfUkVTVUxUX0VSUk9S", 
            "X1VOS05PV05fUkVDSVBJRU5UEAYSIwofQlVZX1JFU1VMVF9FUlJPUl9QUklD", 
            "RV9NSVNNQVRDSBAHEigKJEJVWV9SRVNVTFRfRVJST1JfR0lGVElOR19VTkFW", 
            "QUlMQUJMRRAIEhwKGEJVWV9SRVNVTFRfRVJST1JfVU5LTk9XThAJEioKJkJV", 
            "WV9SRVNVTFRfRVJST1JfR0lGVF9NRVNTQUdFX1RPT19MT05HEAoSHQoZQlVZ", 
            "X1JFU1VMVF9FUlJPUl9TT0xEX09VVBALEjsKN0JVWV9SRVNVTFRfRVJST1Jf", 
            "VEVNUE9SQVJJTFlfVU5BVkFJTEFCTEVfUkVUUllfUE9TU0lCTEUQDBIuCipC", 
            "VVlfUkVTVUxUX0VSUk9SX1BSRVBVUkNIQVNFX0FMUkVBRFlfT1dORUQQDSrB", 
            "AQoaUmVkZWVtQ29kZVJlc3VsdEVycm9yQ29kZXMSJAogUkVERUVNX0NPREVf", 
            "UkVTVUxUX0VSUk9SX1NVQ0NFU1MQABItCilSRURFRU1fQ09ERV9SRVNVTFRf", 
            "RVJST1JfQUxSRUFEWV9SRURFRU1FRBABEigKJFJFREVFTV9DT0RFX1JFU1VM", 
            "VF9FUlJPUl9JTlZBTElEX0tFWRACEiQKIFJFREVFTV9DT0RFX1JFU1VMVF9F", 
          "UlJPUl9VTktOT1dOEAM="));
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_Gazillion_MHCatalogEntryType__Descriptor = Descriptor.MessageTypes[0];
        internal__static_Gazillion_MHCatalogEntryType__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHCatalogEntryType, global::Gazillion.MHCatalogEntryType.Builder>(internal__static_Gazillion_MHCatalogEntryType__Descriptor,
                new string[] { "Name", "Order", });
        internal__static_Gazillion_MHCatalogEntryTypeModifier__Descriptor = Descriptor.MessageTypes[1];
        internal__static_Gazillion_MHCatalogEntryTypeModifier__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHCatalogEntryTypeModifier, global::Gazillion.MHCatalogEntryTypeModifier.Builder>(internal__static_Gazillion_MHCatalogEntryTypeModifier__Descriptor,
                new string[] { "Name", "Order", });
        internal__static_Gazillion_MHBannerUrl__Descriptor = Descriptor.MessageTypes[2];
        internal__static_Gazillion_MHBannerUrl__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHBannerUrl, global::Gazillion.MHBannerUrl.Builder>(internal__static_Gazillion_MHBannerUrl__Descriptor,
                new string[] { "Type", "Url", });
        internal__static_Gazillion_MHLocalizedCatalogUrls__Descriptor = Descriptor.MessageTypes[3];
        internal__static_Gazillion_MHLocalizedCatalogUrls__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHLocalizedCatalogUrls, global::Gazillion.MHLocalizedCatalogUrls.Builder>(internal__static_Gazillion_MHLocalizedCatalogUrls__Descriptor,
                new string[] { "LocaleId", "StoreHomePageUrl", "StoreBannerPageUrls", "StoreRealMoneyUrl", });
        internal__static_Gazillion_MHLocalizedCatalogEntry__Descriptor = Descriptor.MessageTypes[4];
        internal__static_Gazillion_MHLocalizedCatalogEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHLocalizedCatalogEntry, global::Gazillion.MHLocalizedCatalogEntry.Builder>(internal__static_Gazillion_MHLocalizedCatalogEntry__Descriptor,
                new string[] { "LanguageId", "Description", "Title", "ReleaseDate", "ItemPrice", });
        internal__static_Gazillion_MHLocalizedCatalogEntryUrlOrData__Descriptor = Descriptor.MessageTypes[5];
        internal__static_Gazillion_MHLocalizedCatalogEntryUrlOrData__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHLocalizedCatalogEntryUrlOrData, global::Gazillion.MHLocalizedCatalogEntryUrlOrData.Builder>(internal__static_Gazillion_MHLocalizedCatalogEntryUrlOrData__Descriptor,
                new string[] { "LanguageId", "Url", "Imagedata", });
        internal__static_Gazillion_MHCatalogGuidEntry__Descriptor = Descriptor.MessageTypes[6];
        internal__static_Gazillion_MHCatalogGuidEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MHCatalogGuidEntry, global::Gazillion.MHCatalogGuidEntry.Builder>(internal__static_Gazillion_MHCatalogGuidEntry__Descriptor,
                new string[] { "PrototypeGuid", "ItemPrototypeRuntimeIdForClient", "Quantity", });
        internal__static_Gazillion_MarvelHeroesCatalogEntry__Descriptor = Descriptor.MessageTypes[7];
        internal__static_Gazillion_MarvelHeroesCatalogEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.MarvelHeroesCatalogEntry, global::Gazillion.MarvelHeroesCatalogEntry.Builder>(internal__static_Gazillion_MarvelHeroesCatalogEntry__Descriptor,
                new string[] { "SkuId", "GuidItems", "AdditionalGuidItems", "LocalizedEntries", "Infourls", "Contentdata", "Type", "TypeModifier", });
        internal__static_Gazillion_GiftHistoryEntry__Descriptor = Descriptor.MessageTypes[8];
        internal__static_Gazillion_GiftHistoryEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.GiftHistoryEntry, global::Gazillion.GiftHistoryEntry.Builder>(internal__static_Gazillion_GiftHistoryEntry__Descriptor,
                new string[] { "TransactionId", "SkuId", "Timestamp", "Message", });
        internal__static_Gazillion_GiftHistoryForPlayerEntry__Descriptor = Descriptor.MessageTypes[9];
        internal__static_Gazillion_GiftHistoryForPlayerEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.GiftHistoryForPlayerEntry, global::Gazillion.GiftHistoryForPlayerEntry.Builder>(internal__static_Gazillion_GiftHistoryForPlayerEntry__Descriptor,
                new string[] { "PlatformAccountId", "Name", "HistoryEntries", });
        internal__static_Gazillion_AwardItem__Descriptor = Descriptor.MessageTypes[10];
        internal__static_Gazillion_AwardItem__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.AwardItem, global::Gazillion.AwardItem.Builder>(internal__static_Gazillion_AwardItem__Descriptor,
                new string[] { "AwardId", "SkuId", "Quantity", });
        internal__static_Gazillion_AwardCouponDescription__Descriptor = Descriptor.MessageTypes[11];
        internal__static_Gazillion_AwardCouponDescription__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.AwardCouponDescription, global::Gazillion.AwardCouponDescription.Builder>(internal__static_Gazillion_AwardCouponDescription__Descriptor,
                new string[] { "LocaleId", "Description", });
        internal__static_Gazillion_AwardCoupon__Descriptor = Descriptor.MessageTypes[12];
        internal__static_Gazillion_AwardCoupon__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.AwardCoupon, global::Gazillion.AwardCoupon.Builder>(internal__static_Gazillion_AwardCoupon__Descriptor,
                new string[] { "CouponId", "Discount", "CouponState", "ExpirationDateUtc", "Descriptions", "Wsec", });
        internal__static_Gazillion_AwardEntry__Descriptor = Descriptor.MessageTypes[13];
        internal__static_Gazillion_AwardEntry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.AwardEntry, global::Gazillion.AwardEntry.Builder>(internal__static_Gazillion_AwardEntry__Descriptor,
                new string[] { "AwardType", "Item", "Coupon", });
        internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatus__Descriptor = Descriptor.MessageTypes[14];
        internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatus__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.BillingPlayStationUpdateEntitlementStatus, global::Gazillion.BillingPlayStationUpdateEntitlementStatus.Builder>(internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatus__Descriptor,
                new string[] { "EntitlementId", "UseCount", "UseLimit", });
        internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatusResponse__Descriptor = Descriptor.MessageTypes[15];
        internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatusResponse__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.BillingPlayStationUpdateEntitlementStatusResponse, global::Gazillion.BillingPlayStationUpdateEntitlementStatusResponse.Builder>(internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatusResponse__Descriptor,
                new string[] { "EntitlementId", "UseCount", "UseLimit", "Consumed", });
        internal__static_Gazillion_BillingPlayStationProcessPendingEntitlementTransactions__Descriptor = Descriptor.MessageTypes[16];
        internal__static_Gazillion_BillingPlayStationProcessPendingEntitlementTransactions__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::Gazillion.BillingPlayStationProcessPendingEntitlementTransactions, global::Gazillion.BillingPlayStationProcessPendingEntitlementTransactions.Builder>(internal__static_Gazillion_BillingPlayStationProcessPendingEntitlementTransactions__Descriptor,
                new string[] { });
        pb::ExtensionRegistry registry = pb::ExtensionRegistry.CreateInstance();
        RegisterAllExtensions(registry);
        return registry;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum BuyItemResultErrorCodes {
    BUY_RESULT_ERROR_SUCCESS = 0,
    BUY_RESULT_ERROR_ALREADY_HAVE_AVATAR = 1,
    BUY_RESULT_ERROR_ALREADY_HAVE_STASH_INV = 2,
    BUY_RESULT_ERROR_ALREADY_HAVE_PERMABUFF = 3,
    BUY_RESULT_ERROR_INSUFFICIENT_BALANCE = 4,
    BUY_RESULT_ERROR_IS_GIFT = 5,
    BUY_RESULT_ERROR_UNKNOWN_RECIPIENT = 6,
    BUY_RESULT_ERROR_PRICE_MISMATCH = 7,
    BUY_RESULT_ERROR_GIFTING_UNAVAILABLE = 8,
    BUY_RESULT_ERROR_UNKNOWN = 9,
    BUY_RESULT_ERROR_GIFT_MESSAGE_TOO_LONG = 10,
    BUY_RESULT_ERROR_SOLD_OUT = 11,
    BUY_RESULT_ERROR_TEMPORARILY_UNAVAILABLE_RETRY_POSSIBLE = 12,
    BUY_RESULT_ERROR_PREPURCHASE_ALREADY_OWNED = 13,
  }
  
  public enum RedeemCodeResultErrorCodes {
    REDEEM_CODE_RESULT_ERROR_SUCCESS = 0,
    REDEEM_CODE_RESULT_ERROR_ALREADY_REDEEMED = 1,
    REDEEM_CODE_RESULT_ERROR_INVALID_KEY = 2,
    REDEEM_CODE_RESULT_ERROR_UNKNOWN = 3,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHCatalogEntryType : pb::GeneratedMessage<MHCatalogEntryType, MHCatalogEntryType.Builder> {
    private MHCatalogEntryType() { }
    private static readonly MHCatalogEntryType defaultInstance = new MHCatalogEntryType().MakeReadOnly();
    private static readonly string[] _mHCatalogEntryTypeFieldNames = new string[] { "name", "order" };
    private static readonly uint[] _mHCatalogEntryTypeFieldTags = new uint[] { 10, 16 };
    public static MHCatalogEntryType DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHCatalogEntryType DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHCatalogEntryType ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHCatalogEntryType__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHCatalogEntryType, MHCatalogEntryType.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHCatalogEntryType__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int OrderFieldNumber = 2;
    private bool hasOrder;
    private int order_;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public int Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasOrder) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHCatalogEntryTypeFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasOrder) {
        output.WriteInt32(2, field_names[1], Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Order);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHCatalogEntryType ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryType ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHCatalogEntryType ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHCatalogEntryType ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHCatalogEntryType MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHCatalogEntryType prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHCatalogEntryType, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHCatalogEntryType cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHCatalogEntryType result;
      
      private MHCatalogEntryType PrepareBuilder() {
        if (resultIsReadOnly) {
          MHCatalogEntryType original = result;
          result = new MHCatalogEntryType();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHCatalogEntryType MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHCatalogEntryType.Descriptor; }
      }
      
      public override MHCatalogEntryType DefaultInstanceForType {
        get { return global::Gazillion.MHCatalogEntryType.DefaultInstance; }
      }
      
      public override MHCatalogEntryType BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHCatalogEntryType) {
          return MergeFrom((MHCatalogEntryType) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHCatalogEntryType other) {
        if (other == global::Gazillion.MHCatalogEntryType.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHCatalogEntryTypeFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHCatalogEntryTypeFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              result.hasOrder = input.ReadInt32(ref result.order_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasOrder {
        get { return result.hasOrder; }
      }
      public int Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(int value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = 0;
        return this;
      }
    }
    static MHCatalogEntryType() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHCatalogEntryTypeModifier : pb::GeneratedMessage<MHCatalogEntryTypeModifier, MHCatalogEntryTypeModifier.Builder> {
    private MHCatalogEntryTypeModifier() { }
    private static readonly MHCatalogEntryTypeModifier defaultInstance = new MHCatalogEntryTypeModifier().MakeReadOnly();
    private static readonly string[] _mHCatalogEntryTypeModifierFieldNames = new string[] { "name", "order" };
    private static readonly uint[] _mHCatalogEntryTypeModifierFieldTags = new uint[] { 10, 16 };
    public static MHCatalogEntryTypeModifier DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHCatalogEntryTypeModifier DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHCatalogEntryTypeModifier ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHCatalogEntryTypeModifier__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHCatalogEntryTypeModifier, MHCatalogEntryTypeModifier.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHCatalogEntryTypeModifier__FieldAccessorTable; }
    }
    
    public const int NameFieldNumber = 1;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int OrderFieldNumber = 2;
    private bool hasOrder;
    private int order_;
    public bool HasOrder {
      get { return hasOrder; }
    }
    public int Order {
      get { return order_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        if (!hasOrder) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHCatalogEntryTypeModifierFieldNames;
      if (hasName) {
        output.WriteString(1, field_names[0], Name);
      }
      if (hasOrder) {
        output.WriteInt32(2, field_names[1], Order);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Name);
      }
      if (hasOrder) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, Order);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHCatalogEntryTypeModifier ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHCatalogEntryTypeModifier ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHCatalogEntryTypeModifier MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHCatalogEntryTypeModifier prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHCatalogEntryTypeModifier, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHCatalogEntryTypeModifier cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHCatalogEntryTypeModifier result;
      
      private MHCatalogEntryTypeModifier PrepareBuilder() {
        if (resultIsReadOnly) {
          MHCatalogEntryTypeModifier original = result;
          result = new MHCatalogEntryTypeModifier();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHCatalogEntryTypeModifier MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHCatalogEntryTypeModifier.Descriptor; }
      }
      
      public override MHCatalogEntryTypeModifier DefaultInstanceForType {
        get { return global::Gazillion.MHCatalogEntryTypeModifier.DefaultInstance; }
      }
      
      public override MHCatalogEntryTypeModifier BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHCatalogEntryTypeModifier) {
          return MergeFrom((MHCatalogEntryTypeModifier) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHCatalogEntryTypeModifier other) {
        if (other == global::Gazillion.MHCatalogEntryTypeModifier.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.HasOrder) {
          Order = other.Order;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHCatalogEntryTypeModifierFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHCatalogEntryTypeModifierFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 16: {
              result.hasOrder = input.ReadInt32(ref result.order_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public bool HasOrder {
        get { return result.hasOrder; }
      }
      public int Order {
        get { return result.Order; }
        set { SetOrder(value); }
      }
      public Builder SetOrder(int value) {
        PrepareBuilder();
        result.hasOrder = true;
        result.order_ = value;
        return this;
      }
      public Builder ClearOrder() {
        PrepareBuilder();
        result.hasOrder = false;
        result.order_ = 0;
        return this;
      }
    }
    static MHCatalogEntryTypeModifier() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHBannerUrl : pb::GeneratedMessage<MHBannerUrl, MHBannerUrl.Builder> {
    private MHBannerUrl() { }
    private static readonly MHBannerUrl defaultInstance = new MHBannerUrl().MakeReadOnly();
    private static readonly string[] _mHBannerUrlFieldNames = new string[] { "type", "url" };
    private static readonly uint[] _mHBannerUrlFieldTags = new uint[] { 10, 18 };
    public static MHBannerUrl DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHBannerUrl DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHBannerUrl ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHBannerUrl__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHBannerUrl, MHBannerUrl.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHBannerUrl__FieldAccessorTable; }
    }
    
    public const int TypeFieldNumber = 1;
    private bool hasType;
    private string type_ = "";
    public bool HasType {
      get { return hasType; }
    }
    public string Type {
      get { return type_; }
    }
    
    public const int UrlFieldNumber = 2;
    private bool hasUrl;
    private string url_ = "";
    public bool HasUrl {
      get { return hasUrl; }
    }
    public string Url {
      get { return url_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasType) return false;
        if (!hasUrl) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHBannerUrlFieldNames;
      if (hasType) {
        output.WriteString(1, field_names[0], Type);
      }
      if (hasUrl) {
        output.WriteString(2, field_names[1], Url);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasType) {
        size += pb::CodedOutputStream.ComputeStringSize(1, Type);
      }
      if (hasUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Url);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHBannerUrl ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHBannerUrl ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHBannerUrl ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHBannerUrl ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHBannerUrl MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHBannerUrl prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHBannerUrl, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHBannerUrl cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHBannerUrl result;
      
      private MHBannerUrl PrepareBuilder() {
        if (resultIsReadOnly) {
          MHBannerUrl original = result;
          result = new MHBannerUrl();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHBannerUrl MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHBannerUrl.Descriptor; }
      }
      
      public override MHBannerUrl DefaultInstanceForType {
        get { return global::Gazillion.MHBannerUrl.DefaultInstance; }
      }
      
      public override MHBannerUrl BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHBannerUrl) {
          return MergeFrom((MHBannerUrl) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHBannerUrl other) {
        if (other == global::Gazillion.MHBannerUrl.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasType) {
          Type = other.Type;
        }
        if (other.HasUrl) {
          Url = other.Url;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHBannerUrlFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHBannerUrlFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasType = input.ReadString(ref result.type_);
              break;
            }
            case 18: {
              result.hasUrl = input.ReadString(ref result.url_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasType {
        get { return result.hasType; }
      }
      public string Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = "";
        return this;
      }
      
      public bool HasUrl {
        get { return result.hasUrl; }
      }
      public string Url {
        get { return result.Url; }
        set { SetUrl(value); }
      }
      public Builder SetUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUrl = true;
        result.url_ = value;
        return this;
      }
      public Builder ClearUrl() {
        PrepareBuilder();
        result.hasUrl = false;
        result.url_ = "";
        return this;
      }
    }
    static MHBannerUrl() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHLocalizedCatalogUrls : pb::GeneratedMessage<MHLocalizedCatalogUrls, MHLocalizedCatalogUrls.Builder> {
    private MHLocalizedCatalogUrls() { }
    private static readonly MHLocalizedCatalogUrls defaultInstance = new MHLocalizedCatalogUrls().MakeReadOnly();
    private static readonly string[] _mHLocalizedCatalogUrlsFieldNames = new string[] { "localeId", "storeBannerPageUrls", "storeHomePageUrl", "storeRealMoneyUrl" };
    private static readonly uint[] _mHLocalizedCatalogUrlsFieldTags = new uint[] { 10, 26, 18, 34 };
    public static MHLocalizedCatalogUrls DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHLocalizedCatalogUrls DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHLocalizedCatalogUrls ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHLocalizedCatalogUrls__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHLocalizedCatalogUrls, MHLocalizedCatalogUrls.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHLocalizedCatalogUrls__FieldAccessorTable; }
    }
    
    public const int LocaleIdFieldNumber = 1;
    private bool hasLocaleId;
    private string localeId_ = "";
    public bool HasLocaleId {
      get { return hasLocaleId; }
    }
    public string LocaleId {
      get { return localeId_; }
    }
    
    public const int StoreHomePageUrlFieldNumber = 2;
    private bool hasStoreHomePageUrl;
    private string storeHomePageUrl_ = "";
    public bool HasStoreHomePageUrl {
      get { return hasStoreHomePageUrl; }
    }
    public string StoreHomePageUrl {
      get { return storeHomePageUrl_; }
    }
    
    public const int StoreBannerPageUrlsFieldNumber = 3;
    private pbc::PopsicleList<global::Gazillion.MHBannerUrl> storeBannerPageUrls_ = new pbc::PopsicleList<global::Gazillion.MHBannerUrl>();
    public scg::IList<global::Gazillion.MHBannerUrl> StoreBannerPageUrlsList {
      get { return storeBannerPageUrls_; }
    }
    public int StoreBannerPageUrlsCount {
      get { return storeBannerPageUrls_.Count; }
    }
    public global::Gazillion.MHBannerUrl GetStoreBannerPageUrls(int index) {
      return storeBannerPageUrls_[index];
    }
    
    public const int StoreRealMoneyUrlFieldNumber = 4;
    private bool hasStoreRealMoneyUrl;
    private string storeRealMoneyUrl_ = "";
    public bool HasStoreRealMoneyUrl {
      get { return hasStoreRealMoneyUrl; }
    }
    public string StoreRealMoneyUrl {
      get { return storeRealMoneyUrl_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLocaleId) return false;
        foreach (global::Gazillion.MHBannerUrl element in StoreBannerPageUrlsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHLocalizedCatalogUrlsFieldNames;
      if (hasLocaleId) {
        output.WriteString(1, field_names[0], LocaleId);
      }
      if (hasStoreHomePageUrl) {
        output.WriteString(2, field_names[2], StoreHomePageUrl);
      }
      if (storeBannerPageUrls_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], storeBannerPageUrls_);
      }
      if (hasStoreRealMoneyUrl) {
        output.WriteString(4, field_names[3], StoreRealMoneyUrl);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLocaleId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LocaleId);
      }
      if (hasStoreHomePageUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(2, StoreHomePageUrl);
      }
      foreach (global::Gazillion.MHBannerUrl element in StoreBannerPageUrlsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasStoreRealMoneyUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(4, StoreRealMoneyUrl);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHLocalizedCatalogUrls ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHLocalizedCatalogUrls ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHLocalizedCatalogUrls MakeReadOnly() {
      storeBannerPageUrls_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHLocalizedCatalogUrls prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHLocalizedCatalogUrls, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHLocalizedCatalogUrls cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHLocalizedCatalogUrls result;
      
      private MHLocalizedCatalogUrls PrepareBuilder() {
        if (resultIsReadOnly) {
          MHLocalizedCatalogUrls original = result;
          result = new MHLocalizedCatalogUrls();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHLocalizedCatalogUrls MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHLocalizedCatalogUrls.Descriptor; }
      }
      
      public override MHLocalizedCatalogUrls DefaultInstanceForType {
        get { return global::Gazillion.MHLocalizedCatalogUrls.DefaultInstance; }
      }
      
      public override MHLocalizedCatalogUrls BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHLocalizedCatalogUrls) {
          return MergeFrom((MHLocalizedCatalogUrls) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHLocalizedCatalogUrls other) {
        if (other == global::Gazillion.MHLocalizedCatalogUrls.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLocaleId) {
          LocaleId = other.LocaleId;
        }
        if (other.HasStoreHomePageUrl) {
          StoreHomePageUrl = other.StoreHomePageUrl;
        }
        if (other.storeBannerPageUrls_.Count != 0) {
          result.storeBannerPageUrls_.Add(other.storeBannerPageUrls_);
        }
        if (other.HasStoreRealMoneyUrl) {
          StoreRealMoneyUrl = other.StoreRealMoneyUrl;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHLocalizedCatalogUrlsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHLocalizedCatalogUrlsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLocaleId = input.ReadString(ref result.localeId_);
              break;
            }
            case 18: {
              result.hasStoreHomePageUrl = input.ReadString(ref result.storeHomePageUrl_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.storeBannerPageUrls_, global::Gazillion.MHBannerUrl.DefaultInstance, extensionRegistry);
              break;
            }
            case 34: {
              result.hasStoreRealMoneyUrl = input.ReadString(ref result.storeRealMoneyUrl_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLocaleId {
        get { return result.hasLocaleId; }
      }
      public string LocaleId {
        get { return result.LocaleId; }
        set { SetLocaleId(value); }
      }
      public Builder SetLocaleId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLocaleId = true;
        result.localeId_ = value;
        return this;
      }
      public Builder ClearLocaleId() {
        PrepareBuilder();
        result.hasLocaleId = false;
        result.localeId_ = "";
        return this;
      }
      
      public bool HasStoreHomePageUrl {
        get { return result.hasStoreHomePageUrl; }
      }
      public string StoreHomePageUrl {
        get { return result.StoreHomePageUrl; }
        set { SetStoreHomePageUrl(value); }
      }
      public Builder SetStoreHomePageUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStoreHomePageUrl = true;
        result.storeHomePageUrl_ = value;
        return this;
      }
      public Builder ClearStoreHomePageUrl() {
        PrepareBuilder();
        result.hasStoreHomePageUrl = false;
        result.storeHomePageUrl_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.MHBannerUrl> StoreBannerPageUrlsList {
        get { return PrepareBuilder().storeBannerPageUrls_; }
      }
      public int StoreBannerPageUrlsCount {
        get { return result.StoreBannerPageUrlsCount; }
      }
      public global::Gazillion.MHBannerUrl GetStoreBannerPageUrls(int index) {
        return result.GetStoreBannerPageUrls(index);
      }
      public Builder SetStoreBannerPageUrls(int index, global::Gazillion.MHBannerUrl value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.storeBannerPageUrls_[index] = value;
        return this;
      }
      public Builder SetStoreBannerPageUrls(int index, global::Gazillion.MHBannerUrl.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.storeBannerPageUrls_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddStoreBannerPageUrls(global::Gazillion.MHBannerUrl value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.storeBannerPageUrls_.Add(value);
        return this;
      }
      public Builder AddStoreBannerPageUrls(global::Gazillion.MHBannerUrl.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.storeBannerPageUrls_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeStoreBannerPageUrls(scg::IEnumerable<global::Gazillion.MHBannerUrl> values) {
        PrepareBuilder();
        result.storeBannerPageUrls_.Add(values);
        return this;
      }
      public Builder ClearStoreBannerPageUrls() {
        PrepareBuilder();
        result.storeBannerPageUrls_.Clear();
        return this;
      }
      
      public bool HasStoreRealMoneyUrl {
        get { return result.hasStoreRealMoneyUrl; }
      }
      public string StoreRealMoneyUrl {
        get { return result.StoreRealMoneyUrl; }
        set { SetStoreRealMoneyUrl(value); }
      }
      public Builder SetStoreRealMoneyUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasStoreRealMoneyUrl = true;
        result.storeRealMoneyUrl_ = value;
        return this;
      }
      public Builder ClearStoreRealMoneyUrl() {
        PrepareBuilder();
        result.hasStoreRealMoneyUrl = false;
        result.storeRealMoneyUrl_ = "";
        return this;
      }
    }
    static MHLocalizedCatalogUrls() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHLocalizedCatalogEntry : pb::GeneratedMessage<MHLocalizedCatalogEntry, MHLocalizedCatalogEntry.Builder> {
    private MHLocalizedCatalogEntry() { }
    private static readonly MHLocalizedCatalogEntry defaultInstance = new MHLocalizedCatalogEntry().MakeReadOnly();
    private static readonly string[] _mHLocalizedCatalogEntryFieldNames = new string[] { "description", "itemPrice", "language_id", "releaseDate", "title" };
    private static readonly uint[] _mHLocalizedCatalogEntryFieldTags = new uint[] { 18, 48, 10, 42, 26 };
    public static MHLocalizedCatalogEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHLocalizedCatalogEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHLocalizedCatalogEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHLocalizedCatalogEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHLocalizedCatalogEntry, MHLocalizedCatalogEntry.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHLocalizedCatalogEntry__FieldAccessorTable; }
    }
    
    public const int LanguageIdFieldNumber = 1;
    private bool hasLanguageId;
    private string languageId_ = "";
    public bool HasLanguageId {
      get { return hasLanguageId; }
    }
    public string LanguageId {
      get { return languageId_; }
    }
    
    public const int DescriptionFieldNumber = 2;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public const int TitleFieldNumber = 3;
    private bool hasTitle;
    private string title_ = "";
    public bool HasTitle {
      get { return hasTitle; }
    }
    public string Title {
      get { return title_; }
    }
    
    public const int ReleaseDateFieldNumber = 5;
    private bool hasReleaseDate;
    private string releaseDate_ = "";
    public bool HasReleaseDate {
      get { return hasReleaseDate; }
    }
    public string ReleaseDate {
      get { return releaseDate_; }
    }
    
    public const int ItemPriceFieldNumber = 6;
    private bool hasItemPrice;
    private long itemPrice_;
    public bool HasItemPrice {
      get { return hasItemPrice; }
    }
    public long ItemPrice {
      get { return itemPrice_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLanguageId) return false;
        if (!hasItemPrice) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHLocalizedCatalogEntryFieldNames;
      if (hasLanguageId) {
        output.WriteString(1, field_names[2], LanguageId);
      }
      if (hasDescription) {
        output.WriteString(2, field_names[0], Description);
      }
      if (hasTitle) {
        output.WriteString(3, field_names[4], Title);
      }
      if (hasReleaseDate) {
        output.WriteString(5, field_names[3], ReleaseDate);
      }
      if (hasItemPrice) {
        output.WriteInt64(6, field_names[1], ItemPrice);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLanguageId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LanguageId);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Description);
      }
      if (hasTitle) {
        size += pb::CodedOutputStream.ComputeStringSize(3, Title);
      }
      if (hasReleaseDate) {
        size += pb::CodedOutputStream.ComputeStringSize(5, ReleaseDate);
      }
      if (hasItemPrice) {
        size += pb::CodedOutputStream.ComputeInt64Size(6, ItemPrice);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHLocalizedCatalogEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHLocalizedCatalogEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHLocalizedCatalogEntry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHLocalizedCatalogEntry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHLocalizedCatalogEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHLocalizedCatalogEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHLocalizedCatalogEntry result;
      
      private MHLocalizedCatalogEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          MHLocalizedCatalogEntry original = result;
          result = new MHLocalizedCatalogEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHLocalizedCatalogEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHLocalizedCatalogEntry.Descriptor; }
      }
      
      public override MHLocalizedCatalogEntry DefaultInstanceForType {
        get { return global::Gazillion.MHLocalizedCatalogEntry.DefaultInstance; }
      }
      
      public override MHLocalizedCatalogEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHLocalizedCatalogEntry) {
          return MergeFrom((MHLocalizedCatalogEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHLocalizedCatalogEntry other) {
        if (other == global::Gazillion.MHLocalizedCatalogEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLanguageId) {
          LanguageId = other.LanguageId;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        if (other.HasTitle) {
          Title = other.Title;
        }
        if (other.HasReleaseDate) {
          ReleaseDate = other.ReleaseDate;
        }
        if (other.HasItemPrice) {
          ItemPrice = other.ItemPrice;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHLocalizedCatalogEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHLocalizedCatalogEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLanguageId = input.ReadString(ref result.languageId_);
              break;
            }
            case 18: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
            case 26: {
              result.hasTitle = input.ReadString(ref result.title_);
              break;
            }
            case 42: {
              result.hasReleaseDate = input.ReadString(ref result.releaseDate_);
              break;
            }
            case 48: {
              result.hasItemPrice = input.ReadInt64(ref result.itemPrice_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLanguageId {
        get { return result.hasLanguageId; }
      }
      public string LanguageId {
        get { return result.LanguageId; }
        set { SetLanguageId(value); }
      }
      public Builder SetLanguageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLanguageId = true;
        result.languageId_ = value;
        return this;
      }
      public Builder ClearLanguageId() {
        PrepareBuilder();
        result.hasLanguageId = false;
        result.languageId_ = "";
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
      
      public bool HasTitle {
        get { return result.hasTitle; }
      }
      public string Title {
        get { return result.Title; }
        set { SetTitle(value); }
      }
      public Builder SetTitle(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTitle = true;
        result.title_ = value;
        return this;
      }
      public Builder ClearTitle() {
        PrepareBuilder();
        result.hasTitle = false;
        result.title_ = "";
        return this;
      }
      
      public bool HasReleaseDate {
        get { return result.hasReleaseDate; }
      }
      public string ReleaseDate {
        get { return result.ReleaseDate; }
        set { SetReleaseDate(value); }
      }
      public Builder SetReleaseDate(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasReleaseDate = true;
        result.releaseDate_ = value;
        return this;
      }
      public Builder ClearReleaseDate() {
        PrepareBuilder();
        result.hasReleaseDate = false;
        result.releaseDate_ = "";
        return this;
      }
      
      public bool HasItemPrice {
        get { return result.hasItemPrice; }
      }
      public long ItemPrice {
        get { return result.ItemPrice; }
        set { SetItemPrice(value); }
      }
      public Builder SetItemPrice(long value) {
        PrepareBuilder();
        result.hasItemPrice = true;
        result.itemPrice_ = value;
        return this;
      }
      public Builder ClearItemPrice() {
        PrepareBuilder();
        result.hasItemPrice = false;
        result.itemPrice_ = 0L;
        return this;
      }
    }
    static MHLocalizedCatalogEntry() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHLocalizedCatalogEntryUrlOrData : pb::GeneratedMessage<MHLocalizedCatalogEntryUrlOrData, MHLocalizedCatalogEntryUrlOrData.Builder> {
    private MHLocalizedCatalogEntryUrlOrData() { }
    private static readonly MHLocalizedCatalogEntryUrlOrData defaultInstance = new MHLocalizedCatalogEntryUrlOrData().MakeReadOnly();
    private static readonly string[] _mHLocalizedCatalogEntryUrlOrDataFieldNames = new string[] { "imagedata", "language_id", "url" };
    private static readonly uint[] _mHLocalizedCatalogEntryUrlOrDataFieldTags = new uint[] { 26, 10, 18 };
    public static MHLocalizedCatalogEntryUrlOrData DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHLocalizedCatalogEntryUrlOrData DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHLocalizedCatalogEntryUrlOrData ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHLocalizedCatalogEntryUrlOrData__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHLocalizedCatalogEntryUrlOrData, MHLocalizedCatalogEntryUrlOrData.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHLocalizedCatalogEntryUrlOrData__FieldAccessorTable; }
    }
    
    public const int LanguageIdFieldNumber = 1;
    private bool hasLanguageId;
    private string languageId_ = "";
    public bool HasLanguageId {
      get { return hasLanguageId; }
    }
    public string LanguageId {
      get { return languageId_; }
    }
    
    public const int UrlFieldNumber = 2;
    private bool hasUrl;
    private string url_ = "";
    public bool HasUrl {
      get { return hasUrl; }
    }
    public string Url {
      get { return url_; }
    }
    
    public const int ImagedataFieldNumber = 3;
    private bool hasImagedata;
    private pb::ByteString imagedata_ = pb::ByteString.Empty;
    public bool HasImagedata {
      get { return hasImagedata; }
    }
    public pb::ByteString Imagedata {
      get { return imagedata_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLanguageId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHLocalizedCatalogEntryUrlOrDataFieldNames;
      if (hasLanguageId) {
        output.WriteString(1, field_names[1], LanguageId);
      }
      if (hasUrl) {
        output.WriteString(2, field_names[2], Url);
      }
      if (hasImagedata) {
        output.WriteBytes(3, field_names[0], Imagedata);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLanguageId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LanguageId);
      }
      if (hasUrl) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Url);
      }
      if (hasImagedata) {
        size += pb::CodedOutputStream.ComputeBytesSize(3, Imagedata);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHLocalizedCatalogEntryUrlOrData ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHLocalizedCatalogEntryUrlOrData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogEntryUrlOrData ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHLocalizedCatalogEntryUrlOrData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogEntryUrlOrData ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHLocalizedCatalogEntryUrlOrData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHLocalizedCatalogEntryUrlOrData ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHLocalizedCatalogEntryUrlOrData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHLocalizedCatalogEntryUrlOrData ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHLocalizedCatalogEntryUrlOrData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHLocalizedCatalogEntryUrlOrData MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHLocalizedCatalogEntryUrlOrData prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHLocalizedCatalogEntryUrlOrData, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHLocalizedCatalogEntryUrlOrData cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHLocalizedCatalogEntryUrlOrData result;
      
      private MHLocalizedCatalogEntryUrlOrData PrepareBuilder() {
        if (resultIsReadOnly) {
          MHLocalizedCatalogEntryUrlOrData original = result;
          result = new MHLocalizedCatalogEntryUrlOrData();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHLocalizedCatalogEntryUrlOrData MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHLocalizedCatalogEntryUrlOrData.Descriptor; }
      }
      
      public override MHLocalizedCatalogEntryUrlOrData DefaultInstanceForType {
        get { return global::Gazillion.MHLocalizedCatalogEntryUrlOrData.DefaultInstance; }
      }
      
      public override MHLocalizedCatalogEntryUrlOrData BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHLocalizedCatalogEntryUrlOrData) {
          return MergeFrom((MHLocalizedCatalogEntryUrlOrData) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHLocalizedCatalogEntryUrlOrData other) {
        if (other == global::Gazillion.MHLocalizedCatalogEntryUrlOrData.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLanguageId) {
          LanguageId = other.LanguageId;
        }
        if (other.HasUrl) {
          Url = other.Url;
        }
        if (other.HasImagedata) {
          Imagedata = other.Imagedata;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHLocalizedCatalogEntryUrlOrDataFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHLocalizedCatalogEntryUrlOrDataFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLanguageId = input.ReadString(ref result.languageId_);
              break;
            }
            case 18: {
              result.hasUrl = input.ReadString(ref result.url_);
              break;
            }
            case 26: {
              result.hasImagedata = input.ReadBytes(ref result.imagedata_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLanguageId {
        get { return result.hasLanguageId; }
      }
      public string LanguageId {
        get { return result.LanguageId; }
        set { SetLanguageId(value); }
      }
      public Builder SetLanguageId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLanguageId = true;
        result.languageId_ = value;
        return this;
      }
      public Builder ClearLanguageId() {
        PrepareBuilder();
        result.hasLanguageId = false;
        result.languageId_ = "";
        return this;
      }
      
      public bool HasUrl {
        get { return result.hasUrl; }
      }
      public string Url {
        get { return result.Url; }
        set { SetUrl(value); }
      }
      public Builder SetUrl(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUrl = true;
        result.url_ = value;
        return this;
      }
      public Builder ClearUrl() {
        PrepareBuilder();
        result.hasUrl = false;
        result.url_ = "";
        return this;
      }
      
      public bool HasImagedata {
        get { return result.hasImagedata; }
      }
      public pb::ByteString Imagedata {
        get { return result.Imagedata; }
        set { SetImagedata(value); }
      }
      public Builder SetImagedata(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasImagedata = true;
        result.imagedata_ = value;
        return this;
      }
      public Builder ClearImagedata() {
        PrepareBuilder();
        result.hasImagedata = false;
        result.imagedata_ = pb::ByteString.Empty;
        return this;
      }
    }
    static MHLocalizedCatalogEntryUrlOrData() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MHCatalogGuidEntry : pb::GeneratedMessage<MHCatalogGuidEntry, MHCatalogGuidEntry.Builder> {
    private MHCatalogGuidEntry() { }
    private static readonly MHCatalogGuidEntry defaultInstance = new MHCatalogGuidEntry().MakeReadOnly();
    private static readonly string[] _mHCatalogGuidEntryFieldNames = new string[] { "itemPrototypeRuntimeIdForClient", "prototypeGuid", "quantity" };
    private static readonly uint[] _mHCatalogGuidEntryFieldTags = new uint[] { 16, 8, 24 };
    public static MHCatalogGuidEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MHCatalogGuidEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MHCatalogGuidEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHCatalogGuidEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MHCatalogGuidEntry, MHCatalogGuidEntry.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MHCatalogGuidEntry__FieldAccessorTable; }
    }
    
    public const int PrototypeGuidFieldNumber = 1;
    private bool hasPrototypeGuid;
    private ulong prototypeGuid_;
    public bool HasPrototypeGuid {
      get { return hasPrototypeGuid; }
    }
    public ulong PrototypeGuid {
      get { return prototypeGuid_; }
    }
    
    public const int ItemPrototypeRuntimeIdForClientFieldNumber = 2;
    private bool hasItemPrototypeRuntimeIdForClient;
    private ulong itemPrototypeRuntimeIdForClient_;
    public bool HasItemPrototypeRuntimeIdForClient {
      get { return hasItemPrototypeRuntimeIdForClient; }
    }
    public ulong ItemPrototypeRuntimeIdForClient {
      get { return itemPrototypeRuntimeIdForClient_; }
    }
    
    public const int QuantityFieldNumber = 3;
    private bool hasQuantity;
    private int quantity_ = 1;
    public bool HasQuantity {
      get { return hasQuantity; }
    }
    public int Quantity {
      get { return quantity_; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _mHCatalogGuidEntryFieldNames;
      if (hasPrototypeGuid) {
        output.WriteUInt64(1, field_names[1], PrototypeGuid);
      }
      if (hasItemPrototypeRuntimeIdForClient) {
        output.WriteUInt64(2, field_names[0], ItemPrototypeRuntimeIdForClient);
      }
      if (hasQuantity) {
        output.WriteInt32(3, field_names[2], Quantity);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPrototypeGuid) {
        size += pb::CodedOutputStream.ComputeUInt64Size(1, PrototypeGuid);
      }
      if (hasItemPrototypeRuntimeIdForClient) {
        size += pb::CodedOutputStream.ComputeUInt64Size(2, ItemPrototypeRuntimeIdForClient);
      }
      if (hasQuantity) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, Quantity);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MHCatalogGuidEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHCatalogGuidEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogGuidEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MHCatalogGuidEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogGuidEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHCatalogGuidEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MHCatalogGuidEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MHCatalogGuidEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MHCatalogGuidEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MHCatalogGuidEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MHCatalogGuidEntry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MHCatalogGuidEntry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MHCatalogGuidEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MHCatalogGuidEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MHCatalogGuidEntry result;
      
      private MHCatalogGuidEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          MHCatalogGuidEntry original = result;
          result = new MHCatalogGuidEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MHCatalogGuidEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MHCatalogGuidEntry.Descriptor; }
      }
      
      public override MHCatalogGuidEntry DefaultInstanceForType {
        get { return global::Gazillion.MHCatalogGuidEntry.DefaultInstance; }
      }
      
      public override MHCatalogGuidEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MHCatalogGuidEntry) {
          return MergeFrom((MHCatalogGuidEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MHCatalogGuidEntry other) {
        if (other == global::Gazillion.MHCatalogGuidEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPrototypeGuid) {
          PrototypeGuid = other.PrototypeGuid;
        }
        if (other.HasItemPrototypeRuntimeIdForClient) {
          ItemPrototypeRuntimeIdForClient = other.ItemPrototypeRuntimeIdForClient;
        }
        if (other.HasQuantity) {
          Quantity = other.Quantity;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_mHCatalogGuidEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _mHCatalogGuidEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasPrototypeGuid = input.ReadUInt64(ref result.prototypeGuid_);
              break;
            }
            case 16: {
              result.hasItemPrototypeRuntimeIdForClient = input.ReadUInt64(ref result.itemPrototypeRuntimeIdForClient_);
              break;
            }
            case 24: {
              result.hasQuantity = input.ReadInt32(ref result.quantity_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPrototypeGuid {
        get { return result.hasPrototypeGuid; }
      }
      public ulong PrototypeGuid {
        get { return result.PrototypeGuid; }
        set { SetPrototypeGuid(value); }
      }
      public Builder SetPrototypeGuid(ulong value) {
        PrepareBuilder();
        result.hasPrototypeGuid = true;
        result.prototypeGuid_ = value;
        return this;
      }
      public Builder ClearPrototypeGuid() {
        PrepareBuilder();
        result.hasPrototypeGuid = false;
        result.prototypeGuid_ = 0UL;
        return this;
      }
      
      public bool HasItemPrototypeRuntimeIdForClient {
        get { return result.hasItemPrototypeRuntimeIdForClient; }
      }
      public ulong ItemPrototypeRuntimeIdForClient {
        get { return result.ItemPrototypeRuntimeIdForClient; }
        set { SetItemPrototypeRuntimeIdForClient(value); }
      }
      public Builder SetItemPrototypeRuntimeIdForClient(ulong value) {
        PrepareBuilder();
        result.hasItemPrototypeRuntimeIdForClient = true;
        result.itemPrototypeRuntimeIdForClient_ = value;
        return this;
      }
      public Builder ClearItemPrototypeRuntimeIdForClient() {
        PrepareBuilder();
        result.hasItemPrototypeRuntimeIdForClient = false;
        result.itemPrototypeRuntimeIdForClient_ = 0UL;
        return this;
      }
      
      public bool HasQuantity {
        get { return result.hasQuantity; }
      }
      public int Quantity {
        get { return result.Quantity; }
        set { SetQuantity(value); }
      }
      public Builder SetQuantity(int value) {
        PrepareBuilder();
        result.hasQuantity = true;
        result.quantity_ = value;
        return this;
      }
      public Builder ClearQuantity() {
        PrepareBuilder();
        result.hasQuantity = false;
        result.quantity_ = 1;
        return this;
      }
    }
    static MHCatalogGuidEntry() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MarvelHeroesCatalogEntry : pb::GeneratedMessage<MarvelHeroesCatalogEntry, MarvelHeroesCatalogEntry.Builder> {
    private MarvelHeroesCatalogEntry() { }
    private static readonly MarvelHeroesCatalogEntry defaultInstance = new MarvelHeroesCatalogEntry().MakeReadOnly();
    private static readonly string[] _marvelHeroesCatalogEntryFieldNames = new string[] { "additionalGuidItems", "contentdata", "guidItems", "infourls", "localizedEntries", "skuId", "type", "typeModifier" };
    private static readonly uint[] _marvelHeroesCatalogEntryFieldTags = new uint[] { 82, 26, 74, 18, 42, 8, 50, 58 };
    public static MarvelHeroesCatalogEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MarvelHeroesCatalogEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MarvelHeroesCatalogEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MarvelHeroesCatalogEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MarvelHeroesCatalogEntry, MarvelHeroesCatalogEntry.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_MarvelHeroesCatalogEntry__FieldAccessorTable; }
    }
    
    public const int SkuIdFieldNumber = 1;
    private bool hasSkuId;
    private long skuId_;
    public bool HasSkuId {
      get { return hasSkuId; }
    }
    public long SkuId {
      get { return skuId_; }
    }
    
    public const int GuidItemsFieldNumber = 9;
    private pbc::PopsicleList<global::Gazillion.MHCatalogGuidEntry> guidItems_ = new pbc::PopsicleList<global::Gazillion.MHCatalogGuidEntry>();
    public scg::IList<global::Gazillion.MHCatalogGuidEntry> GuidItemsList {
      get { return guidItems_; }
    }
    public int GuidItemsCount {
      get { return guidItems_.Count; }
    }
    public global::Gazillion.MHCatalogGuidEntry GetGuidItems(int index) {
      return guidItems_[index];
    }
    
    public const int AdditionalGuidItemsFieldNumber = 10;
    private pbc::PopsicleList<global::Gazillion.MHCatalogGuidEntry> additionalGuidItems_ = new pbc::PopsicleList<global::Gazillion.MHCatalogGuidEntry>();
    public scg::IList<global::Gazillion.MHCatalogGuidEntry> AdditionalGuidItemsList {
      get { return additionalGuidItems_; }
    }
    public int AdditionalGuidItemsCount {
      get { return additionalGuidItems_.Count; }
    }
    public global::Gazillion.MHCatalogGuidEntry GetAdditionalGuidItems(int index) {
      return additionalGuidItems_[index];
    }
    
    public const int LocalizedEntriesFieldNumber = 5;
    private pbc::PopsicleList<global::Gazillion.MHLocalizedCatalogEntry> localizedEntries_ = new pbc::PopsicleList<global::Gazillion.MHLocalizedCatalogEntry>();
    public scg::IList<global::Gazillion.MHLocalizedCatalogEntry> LocalizedEntriesList {
      get { return localizedEntries_; }
    }
    public int LocalizedEntriesCount {
      get { return localizedEntries_.Count; }
    }
    public global::Gazillion.MHLocalizedCatalogEntry GetLocalizedEntries(int index) {
      return localizedEntries_[index];
    }
    
    public const int InfourlsFieldNumber = 2;
    private pbc::PopsicleList<global::Gazillion.MHLocalizedCatalogEntryUrlOrData> infourls_ = new pbc::PopsicleList<global::Gazillion.MHLocalizedCatalogEntryUrlOrData>();
    public scg::IList<global::Gazillion.MHLocalizedCatalogEntryUrlOrData> InfourlsList {
      get { return infourls_; }
    }
    public int InfourlsCount {
      get { return infourls_.Count; }
    }
    public global::Gazillion.MHLocalizedCatalogEntryUrlOrData GetInfourls(int index) {
      return infourls_[index];
    }
    
    public const int ContentdataFieldNumber = 3;
    private pbc::PopsicleList<global::Gazillion.MHLocalizedCatalogEntryUrlOrData> contentdata_ = new pbc::PopsicleList<global::Gazillion.MHLocalizedCatalogEntryUrlOrData>();
    public scg::IList<global::Gazillion.MHLocalizedCatalogEntryUrlOrData> ContentdataList {
      get { return contentdata_; }
    }
    public int ContentdataCount {
      get { return contentdata_.Count; }
    }
    public global::Gazillion.MHLocalizedCatalogEntryUrlOrData GetContentdata(int index) {
      return contentdata_[index];
    }
    
    public const int TypeFieldNumber = 6;
    private bool hasType;
    private global::Gazillion.MHCatalogEntryType type_;
    public bool HasType {
      get { return hasType; }
    }
    public global::Gazillion.MHCatalogEntryType Type {
      get { return type_ ?? global::Gazillion.MHCatalogEntryType.DefaultInstance; }
    }
    
    public const int TypeModifierFieldNumber = 7;
    private pbc::PopsicleList<global::Gazillion.MHCatalogEntryTypeModifier> typeModifier_ = new pbc::PopsicleList<global::Gazillion.MHCatalogEntryTypeModifier>();
    public scg::IList<global::Gazillion.MHCatalogEntryTypeModifier> TypeModifierList {
      get { return typeModifier_; }
    }
    public int TypeModifierCount {
      get { return typeModifier_.Count; }
    }
    public global::Gazillion.MHCatalogEntryTypeModifier GetTypeModifier(int index) {
      return typeModifier_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSkuId) return false;
        foreach (global::Gazillion.MHLocalizedCatalogEntry element in LocalizedEntriesList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Gazillion.MHLocalizedCatalogEntryUrlOrData element in InfourlsList) {
          if (!element.IsInitialized) return false;
        }
        foreach (global::Gazillion.MHLocalizedCatalogEntryUrlOrData element in ContentdataList) {
          if (!element.IsInitialized) return false;
        }
        if (HasType) {
          if (!Type.IsInitialized) return false;
        }
        foreach (global::Gazillion.MHCatalogEntryTypeModifier element in TypeModifierList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _marvelHeroesCatalogEntryFieldNames;
      if (hasSkuId) {
        output.WriteInt64(1, field_names[5], SkuId);
      }
      if (infourls_.Count > 0) {
        output.WriteMessageArray(2, field_names[3], infourls_);
      }
      if (contentdata_.Count > 0) {
        output.WriteMessageArray(3, field_names[1], contentdata_);
      }
      if (localizedEntries_.Count > 0) {
        output.WriteMessageArray(5, field_names[4], localizedEntries_);
      }
      if (hasType) {
        output.WriteMessage(6, field_names[6], Type);
      }
      if (typeModifier_.Count > 0) {
        output.WriteMessageArray(7, field_names[7], typeModifier_);
      }
      if (guidItems_.Count > 0) {
        output.WriteMessageArray(9, field_names[2], guidItems_);
      }
      if (additionalGuidItems_.Count > 0) {
        output.WriteMessageArray(10, field_names[0], additionalGuidItems_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasSkuId) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, SkuId);
      }
      foreach (global::Gazillion.MHCatalogGuidEntry element in GuidItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(9, element);
      }
      foreach (global::Gazillion.MHCatalogGuidEntry element in AdditionalGuidItemsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(10, element);
      }
      foreach (global::Gazillion.MHLocalizedCatalogEntry element in LocalizedEntriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      foreach (global::Gazillion.MHLocalizedCatalogEntryUrlOrData element in InfourlsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, element);
      }
      foreach (global::Gazillion.MHLocalizedCatalogEntryUrlOrData element in ContentdataList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      if (hasType) {
        size += pb::CodedOutputStream.ComputeMessageSize(6, Type);
      }
      foreach (global::Gazillion.MHCatalogEntryTypeModifier element in TypeModifierList) {
        size += pb::CodedOutputStream.ComputeMessageSize(7, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static MarvelHeroesCatalogEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MarvelHeroesCatalogEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MarvelHeroesCatalogEntry MakeReadOnly() {
      guidItems_.MakeReadOnly();
      additionalGuidItems_.MakeReadOnly();
      localizedEntries_.MakeReadOnly();
      infourls_.MakeReadOnly();
      contentdata_.MakeReadOnly();
      typeModifier_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MarvelHeroesCatalogEntry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MarvelHeroesCatalogEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MarvelHeroesCatalogEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MarvelHeroesCatalogEntry result;
      
      private MarvelHeroesCatalogEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          MarvelHeroesCatalogEntry original = result;
          result = new MarvelHeroesCatalogEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MarvelHeroesCatalogEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.MarvelHeroesCatalogEntry.Descriptor; }
      }
      
      public override MarvelHeroesCatalogEntry DefaultInstanceForType {
        get { return global::Gazillion.MarvelHeroesCatalogEntry.DefaultInstance; }
      }
      
      public override MarvelHeroesCatalogEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MarvelHeroesCatalogEntry) {
          return MergeFrom((MarvelHeroesCatalogEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MarvelHeroesCatalogEntry other) {
        if (other == global::Gazillion.MarvelHeroesCatalogEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasSkuId) {
          SkuId = other.SkuId;
        }
        if (other.guidItems_.Count != 0) {
          result.guidItems_.Add(other.guidItems_);
        }
        if (other.additionalGuidItems_.Count != 0) {
          result.additionalGuidItems_.Add(other.additionalGuidItems_);
        }
        if (other.localizedEntries_.Count != 0) {
          result.localizedEntries_.Add(other.localizedEntries_);
        }
        if (other.infourls_.Count != 0) {
          result.infourls_.Add(other.infourls_);
        }
        if (other.contentdata_.Count != 0) {
          result.contentdata_.Add(other.contentdata_);
        }
        if (other.HasType) {
          MergeType(other.Type);
        }
        if (other.typeModifier_.Count != 0) {
          result.typeModifier_.Add(other.typeModifier_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_marvelHeroesCatalogEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _marvelHeroesCatalogEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasSkuId = input.ReadInt64(ref result.skuId_);
              break;
            }
            case 18: {
              input.ReadMessageArray(tag, field_name, result.infourls_, global::Gazillion.MHLocalizedCatalogEntryUrlOrData.DefaultInstance, extensionRegistry);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.contentdata_, global::Gazillion.MHLocalizedCatalogEntryUrlOrData.DefaultInstance, extensionRegistry);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.localizedEntries_, global::Gazillion.MHLocalizedCatalogEntry.DefaultInstance, extensionRegistry);
              break;
            }
            case 50: {
              global::Gazillion.MHCatalogEntryType.Builder subBuilder = global::Gazillion.MHCatalogEntryType.CreateBuilder();
              if (result.hasType) {
                subBuilder.MergeFrom(Type);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Type = subBuilder.BuildPartial();
              break;
            }
            case 58: {
              input.ReadMessageArray(tag, field_name, result.typeModifier_, global::Gazillion.MHCatalogEntryTypeModifier.DefaultInstance, extensionRegistry);
              break;
            }
            case 74: {
              input.ReadMessageArray(tag, field_name, result.guidItems_, global::Gazillion.MHCatalogGuidEntry.DefaultInstance, extensionRegistry);
              break;
            }
            case 82: {
              input.ReadMessageArray(tag, field_name, result.additionalGuidItems_, global::Gazillion.MHCatalogGuidEntry.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasSkuId {
        get { return result.hasSkuId; }
      }
      public long SkuId {
        get { return result.SkuId; }
        set { SetSkuId(value); }
      }
      public Builder SetSkuId(long value) {
        PrepareBuilder();
        result.hasSkuId = true;
        result.skuId_ = value;
        return this;
      }
      public Builder ClearSkuId() {
        PrepareBuilder();
        result.hasSkuId = false;
        result.skuId_ = 0L;
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.MHCatalogGuidEntry> GuidItemsList {
        get { return PrepareBuilder().guidItems_; }
      }
      public int GuidItemsCount {
        get { return result.GuidItemsCount; }
      }
      public global::Gazillion.MHCatalogGuidEntry GetGuidItems(int index) {
        return result.GetGuidItems(index);
      }
      public Builder SetGuidItems(int index, global::Gazillion.MHCatalogGuidEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.guidItems_[index] = value;
        return this;
      }
      public Builder SetGuidItems(int index, global::Gazillion.MHCatalogGuidEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.guidItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddGuidItems(global::Gazillion.MHCatalogGuidEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.guidItems_.Add(value);
        return this;
      }
      public Builder AddGuidItems(global::Gazillion.MHCatalogGuidEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.guidItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeGuidItems(scg::IEnumerable<global::Gazillion.MHCatalogGuidEntry> values) {
        PrepareBuilder();
        result.guidItems_.Add(values);
        return this;
      }
      public Builder ClearGuidItems() {
        PrepareBuilder();
        result.guidItems_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.MHCatalogGuidEntry> AdditionalGuidItemsList {
        get { return PrepareBuilder().additionalGuidItems_; }
      }
      public int AdditionalGuidItemsCount {
        get { return result.AdditionalGuidItemsCount; }
      }
      public global::Gazillion.MHCatalogGuidEntry GetAdditionalGuidItems(int index) {
        return result.GetAdditionalGuidItems(index);
      }
      public Builder SetAdditionalGuidItems(int index, global::Gazillion.MHCatalogGuidEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.additionalGuidItems_[index] = value;
        return this;
      }
      public Builder SetAdditionalGuidItems(int index, global::Gazillion.MHCatalogGuidEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.additionalGuidItems_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddAdditionalGuidItems(global::Gazillion.MHCatalogGuidEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.additionalGuidItems_.Add(value);
        return this;
      }
      public Builder AddAdditionalGuidItems(global::Gazillion.MHCatalogGuidEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.additionalGuidItems_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeAdditionalGuidItems(scg::IEnumerable<global::Gazillion.MHCatalogGuidEntry> values) {
        PrepareBuilder();
        result.additionalGuidItems_.Add(values);
        return this;
      }
      public Builder ClearAdditionalGuidItems() {
        PrepareBuilder();
        result.additionalGuidItems_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.MHLocalizedCatalogEntry> LocalizedEntriesList {
        get { return PrepareBuilder().localizedEntries_; }
      }
      public int LocalizedEntriesCount {
        get { return result.LocalizedEntriesCount; }
      }
      public global::Gazillion.MHLocalizedCatalogEntry GetLocalizedEntries(int index) {
        return result.GetLocalizedEntries(index);
      }
      public Builder SetLocalizedEntries(int index, global::Gazillion.MHLocalizedCatalogEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.localizedEntries_[index] = value;
        return this;
      }
      public Builder SetLocalizedEntries(int index, global::Gazillion.MHLocalizedCatalogEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.localizedEntries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddLocalizedEntries(global::Gazillion.MHLocalizedCatalogEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.localizedEntries_.Add(value);
        return this;
      }
      public Builder AddLocalizedEntries(global::Gazillion.MHLocalizedCatalogEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.localizedEntries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeLocalizedEntries(scg::IEnumerable<global::Gazillion.MHLocalizedCatalogEntry> values) {
        PrepareBuilder();
        result.localizedEntries_.Add(values);
        return this;
      }
      public Builder ClearLocalizedEntries() {
        PrepareBuilder();
        result.localizedEntries_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.MHLocalizedCatalogEntryUrlOrData> InfourlsList {
        get { return PrepareBuilder().infourls_; }
      }
      public int InfourlsCount {
        get { return result.InfourlsCount; }
      }
      public global::Gazillion.MHLocalizedCatalogEntryUrlOrData GetInfourls(int index) {
        return result.GetInfourls(index);
      }
      public Builder SetInfourls(int index, global::Gazillion.MHLocalizedCatalogEntryUrlOrData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.infourls_[index] = value;
        return this;
      }
      public Builder SetInfourls(int index, global::Gazillion.MHLocalizedCatalogEntryUrlOrData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.infourls_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddInfourls(global::Gazillion.MHLocalizedCatalogEntryUrlOrData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.infourls_.Add(value);
        return this;
      }
      public Builder AddInfourls(global::Gazillion.MHLocalizedCatalogEntryUrlOrData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.infourls_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeInfourls(scg::IEnumerable<global::Gazillion.MHLocalizedCatalogEntryUrlOrData> values) {
        PrepareBuilder();
        result.infourls_.Add(values);
        return this;
      }
      public Builder ClearInfourls() {
        PrepareBuilder();
        result.infourls_.Clear();
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.MHLocalizedCatalogEntryUrlOrData> ContentdataList {
        get { return PrepareBuilder().contentdata_; }
      }
      public int ContentdataCount {
        get { return result.ContentdataCount; }
      }
      public global::Gazillion.MHLocalizedCatalogEntryUrlOrData GetContentdata(int index) {
        return result.GetContentdata(index);
      }
      public Builder SetContentdata(int index, global::Gazillion.MHLocalizedCatalogEntryUrlOrData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.contentdata_[index] = value;
        return this;
      }
      public Builder SetContentdata(int index, global::Gazillion.MHLocalizedCatalogEntryUrlOrData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.contentdata_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddContentdata(global::Gazillion.MHLocalizedCatalogEntryUrlOrData value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.contentdata_.Add(value);
        return this;
      }
      public Builder AddContentdata(global::Gazillion.MHLocalizedCatalogEntryUrlOrData.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.contentdata_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeContentdata(scg::IEnumerable<global::Gazillion.MHLocalizedCatalogEntryUrlOrData> values) {
        PrepareBuilder();
        result.contentdata_.Add(values);
        return this;
      }
      public Builder ClearContentdata() {
        PrepareBuilder();
        result.contentdata_.Clear();
        return this;
      }
      
      public bool HasType {
       get { return result.hasType; }
      }
      public global::Gazillion.MHCatalogEntryType Type {
        get { return result.Type; }
        set { SetType(value); }
      }
      public Builder SetType(global::Gazillion.MHCatalogEntryType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder SetType(global::Gazillion.MHCatalogEntryType.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasType = true;
        result.type_ = builderForValue.Build();
        return this;
      }
      public Builder MergeType(global::Gazillion.MHCatalogEntryType value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasType &&
            result.type_ != global::Gazillion.MHCatalogEntryType.DefaultInstance) {
            result.type_ = global::Gazillion.MHCatalogEntryType.CreateBuilder(result.type_).MergeFrom(value).BuildPartial();
        } else {
          result.type_ = value;
        }
        result.hasType = true;
        return this;
      }
      public Builder ClearType() {
        PrepareBuilder();
        result.hasType = false;
        result.type_ = null;
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.MHCatalogEntryTypeModifier> TypeModifierList {
        get { return PrepareBuilder().typeModifier_; }
      }
      public int TypeModifierCount {
        get { return result.TypeModifierCount; }
      }
      public global::Gazillion.MHCatalogEntryTypeModifier GetTypeModifier(int index) {
        return result.GetTypeModifier(index);
      }
      public Builder SetTypeModifier(int index, global::Gazillion.MHCatalogEntryTypeModifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.typeModifier_[index] = value;
        return this;
      }
      public Builder SetTypeModifier(int index, global::Gazillion.MHCatalogEntryTypeModifier.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.typeModifier_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddTypeModifier(global::Gazillion.MHCatalogEntryTypeModifier value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.typeModifier_.Add(value);
        return this;
      }
      public Builder AddTypeModifier(global::Gazillion.MHCatalogEntryTypeModifier.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.typeModifier_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeTypeModifier(scg::IEnumerable<global::Gazillion.MHCatalogEntryTypeModifier> values) {
        PrepareBuilder();
        result.typeModifier_.Add(values);
        return this;
      }
      public Builder ClearTypeModifier() {
        PrepareBuilder();
        result.typeModifier_.Clear();
        return this;
      }
    }
    static MarvelHeroesCatalogEntry() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GiftHistoryEntry : pb::GeneratedMessage<GiftHistoryEntry, GiftHistoryEntry.Builder> {
    private GiftHistoryEntry() { }
    private static readonly GiftHistoryEntry defaultInstance = new GiftHistoryEntry().MakeReadOnly();
    private static readonly string[] _giftHistoryEntryFieldNames = new string[] { "message", "skuId", "timestamp", "transactionId" };
    private static readonly uint[] _giftHistoryEntryFieldTags = new uint[] { 34, 16, 24, 8 };
    public static GiftHistoryEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GiftHistoryEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GiftHistoryEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_GiftHistoryEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GiftHistoryEntry, GiftHistoryEntry.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_GiftHistoryEntry__FieldAccessorTable; }
    }
    
    public const int TransactionIdFieldNumber = 1;
    private bool hasTransactionId;
    private long transactionId_;
    public bool HasTransactionId {
      get { return hasTransactionId; }
    }
    public long TransactionId {
      get { return transactionId_; }
    }
    
    public const int SkuIdFieldNumber = 2;
    private bool hasSkuId;
    private long skuId_;
    public bool HasSkuId {
      get { return hasSkuId; }
    }
    public long SkuId {
      get { return skuId_; }
    }
    
    public const int TimestampFieldNumber = 3;
    private bool hasTimestamp;
    private long timestamp_;
    public bool HasTimestamp {
      get { return hasTimestamp; }
    }
    public long Timestamp {
      get { return timestamp_; }
    }
    
    public const int MessageFieldNumber = 4;
    private bool hasMessage;
    private string message_ = "";
    public bool HasMessage {
      get { return hasMessage; }
    }
    public string Message {
      get { return message_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasSkuId) return false;
        if (!hasTimestamp) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _giftHistoryEntryFieldNames;
      if (hasTransactionId) {
        output.WriteInt64(1, field_names[3], TransactionId);
      }
      if (hasSkuId) {
        output.WriteInt64(2, field_names[1], SkuId);
      }
      if (hasTimestamp) {
        output.WriteInt64(3, field_names[2], Timestamp);
      }
      if (hasMessage) {
        output.WriteString(4, field_names[0], Message);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasTransactionId) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, TransactionId);
      }
      if (hasSkuId) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, SkuId);
      }
      if (hasTimestamp) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, Timestamp);
      }
      if (hasMessage) {
        size += pb::CodedOutputStream.ComputeStringSize(4, Message);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GiftHistoryEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GiftHistoryEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GiftHistoryEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GiftHistoryEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GiftHistoryEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GiftHistoryEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GiftHistoryEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GiftHistoryEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GiftHistoryEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GiftHistoryEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GiftHistoryEntry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GiftHistoryEntry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GiftHistoryEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GiftHistoryEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GiftHistoryEntry result;
      
      private GiftHistoryEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          GiftHistoryEntry original = result;
          result = new GiftHistoryEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GiftHistoryEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.GiftHistoryEntry.Descriptor; }
      }
      
      public override GiftHistoryEntry DefaultInstanceForType {
        get { return global::Gazillion.GiftHistoryEntry.DefaultInstance; }
      }
      
      public override GiftHistoryEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GiftHistoryEntry) {
          return MergeFrom((GiftHistoryEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GiftHistoryEntry other) {
        if (other == global::Gazillion.GiftHistoryEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasTransactionId) {
          TransactionId = other.TransactionId;
        }
        if (other.HasSkuId) {
          SkuId = other.SkuId;
        }
        if (other.HasTimestamp) {
          Timestamp = other.Timestamp;
        }
        if (other.HasMessage) {
          Message = other.Message;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_giftHistoryEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _giftHistoryEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasTransactionId = input.ReadInt64(ref result.transactionId_);
              break;
            }
            case 16: {
              result.hasSkuId = input.ReadInt64(ref result.skuId_);
              break;
            }
            case 24: {
              result.hasTimestamp = input.ReadInt64(ref result.timestamp_);
              break;
            }
            case 34: {
              result.hasMessage = input.ReadString(ref result.message_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasTransactionId {
        get { return result.hasTransactionId; }
      }
      public long TransactionId {
        get { return result.TransactionId; }
        set { SetTransactionId(value); }
      }
      public Builder SetTransactionId(long value) {
        PrepareBuilder();
        result.hasTransactionId = true;
        result.transactionId_ = value;
        return this;
      }
      public Builder ClearTransactionId() {
        PrepareBuilder();
        result.hasTransactionId = false;
        result.transactionId_ = 0L;
        return this;
      }
      
      public bool HasSkuId {
        get { return result.hasSkuId; }
      }
      public long SkuId {
        get { return result.SkuId; }
        set { SetSkuId(value); }
      }
      public Builder SetSkuId(long value) {
        PrepareBuilder();
        result.hasSkuId = true;
        result.skuId_ = value;
        return this;
      }
      public Builder ClearSkuId() {
        PrepareBuilder();
        result.hasSkuId = false;
        result.skuId_ = 0L;
        return this;
      }
      
      public bool HasTimestamp {
        get { return result.hasTimestamp; }
      }
      public long Timestamp {
        get { return result.Timestamp; }
        set { SetTimestamp(value); }
      }
      public Builder SetTimestamp(long value) {
        PrepareBuilder();
        result.hasTimestamp = true;
        result.timestamp_ = value;
        return this;
      }
      public Builder ClearTimestamp() {
        PrepareBuilder();
        result.hasTimestamp = false;
        result.timestamp_ = 0L;
        return this;
      }
      
      public bool HasMessage {
        get { return result.hasMessage; }
      }
      public string Message {
        get { return result.Message; }
        set { SetMessage(value); }
      }
      public Builder SetMessage(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMessage = true;
        result.message_ = value;
        return this;
      }
      public Builder ClearMessage() {
        PrepareBuilder();
        result.hasMessage = false;
        result.message_ = "";
        return this;
      }
    }
    static GiftHistoryEntry() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class GiftHistoryForPlayerEntry : pb::GeneratedMessage<GiftHistoryForPlayerEntry, GiftHistoryForPlayerEntry.Builder> {
    private GiftHistoryForPlayerEntry() { }
    private static readonly GiftHistoryForPlayerEntry defaultInstance = new GiftHistoryForPlayerEntry().MakeReadOnly();
    private static readonly string[] _giftHistoryForPlayerEntryFieldNames = new string[] { "historyEntries", "name", "platformAccountId" };
    private static readonly uint[] _giftHistoryForPlayerEntryFieldTags = new uint[] { 26, 18, 8 };
    public static GiftHistoryForPlayerEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GiftHistoryForPlayerEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override GiftHistoryForPlayerEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_GiftHistoryForPlayerEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GiftHistoryForPlayerEntry, GiftHistoryForPlayerEntry.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_GiftHistoryForPlayerEntry__FieldAccessorTable; }
    }
    
    public const int PlatformAccountIdFieldNumber = 1;
    private bool hasPlatformAccountId;
    private long platformAccountId_;
    public bool HasPlatformAccountId {
      get { return hasPlatformAccountId; }
    }
    public long PlatformAccountId {
      get { return platformAccountId_; }
    }
    
    public const int NameFieldNumber = 2;
    private bool hasName;
    private string name_ = "";
    public bool HasName {
      get { return hasName; }
    }
    public string Name {
      get { return name_; }
    }
    
    public const int HistoryEntriesFieldNumber = 3;
    private pbc::PopsicleList<global::Gazillion.GiftHistoryEntry> historyEntries_ = new pbc::PopsicleList<global::Gazillion.GiftHistoryEntry>();
    public scg::IList<global::Gazillion.GiftHistoryEntry> HistoryEntriesList {
      get { return historyEntries_; }
    }
    public int HistoryEntriesCount {
      get { return historyEntries_.Count; }
    }
    public global::Gazillion.GiftHistoryEntry GetHistoryEntries(int index) {
      return historyEntries_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasName) return false;
        foreach (global::Gazillion.GiftHistoryEntry element in HistoryEntriesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _giftHistoryForPlayerEntryFieldNames;
      if (hasPlatformAccountId) {
        output.WriteInt64(1, field_names[2], PlatformAccountId);
      }
      if (hasName) {
        output.WriteString(2, field_names[1], Name);
      }
      if (historyEntries_.Count > 0) {
        output.WriteMessageArray(3, field_names[0], historyEntries_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasPlatformAccountId) {
        size += pb::CodedOutputStream.ComputeInt64Size(1, PlatformAccountId);
      }
      if (hasName) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Name);
      }
      foreach (global::Gazillion.GiftHistoryEntry element in HistoryEntriesList) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, element);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static GiftHistoryForPlayerEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GiftHistoryForPlayerEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GiftHistoryForPlayerEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GiftHistoryForPlayerEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GiftHistoryForPlayerEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GiftHistoryForPlayerEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GiftHistoryForPlayerEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GiftHistoryForPlayerEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GiftHistoryForPlayerEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GiftHistoryForPlayerEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private GiftHistoryForPlayerEntry MakeReadOnly() {
      historyEntries_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GiftHistoryForPlayerEntry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<GiftHistoryForPlayerEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(GiftHistoryForPlayerEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private GiftHistoryForPlayerEntry result;
      
      private GiftHistoryForPlayerEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          GiftHistoryForPlayerEntry original = result;
          result = new GiftHistoryForPlayerEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override GiftHistoryForPlayerEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.GiftHistoryForPlayerEntry.Descriptor; }
      }
      
      public override GiftHistoryForPlayerEntry DefaultInstanceForType {
        get { return global::Gazillion.GiftHistoryForPlayerEntry.DefaultInstance; }
      }
      
      public override GiftHistoryForPlayerEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GiftHistoryForPlayerEntry) {
          return MergeFrom((GiftHistoryForPlayerEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GiftHistoryForPlayerEntry other) {
        if (other == global::Gazillion.GiftHistoryForPlayerEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasPlatformAccountId) {
          PlatformAccountId = other.PlatformAccountId;
        }
        if (other.HasName) {
          Name = other.Name;
        }
        if (other.historyEntries_.Count != 0) {
          result.historyEntries_.Add(other.historyEntries_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_giftHistoryForPlayerEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _giftHistoryForPlayerEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasPlatformAccountId = input.ReadInt64(ref result.platformAccountId_);
              break;
            }
            case 18: {
              result.hasName = input.ReadString(ref result.name_);
              break;
            }
            case 26: {
              input.ReadMessageArray(tag, field_name, result.historyEntries_, global::Gazillion.GiftHistoryEntry.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasPlatformAccountId {
        get { return result.hasPlatformAccountId; }
      }
      public long PlatformAccountId {
        get { return result.PlatformAccountId; }
        set { SetPlatformAccountId(value); }
      }
      public Builder SetPlatformAccountId(long value) {
        PrepareBuilder();
        result.hasPlatformAccountId = true;
        result.platformAccountId_ = value;
        return this;
      }
      public Builder ClearPlatformAccountId() {
        PrepareBuilder();
        result.hasPlatformAccountId = false;
        result.platformAccountId_ = 0L;
        return this;
      }
      
      public bool HasName {
        get { return result.hasName; }
      }
      public string Name {
        get { return result.Name; }
        set { SetName(value); }
      }
      public Builder SetName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder ClearName() {
        PrepareBuilder();
        result.hasName = false;
        result.name_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.GiftHistoryEntry> HistoryEntriesList {
        get { return PrepareBuilder().historyEntries_; }
      }
      public int HistoryEntriesCount {
        get { return result.HistoryEntriesCount; }
      }
      public global::Gazillion.GiftHistoryEntry GetHistoryEntries(int index) {
        return result.GetHistoryEntries(index);
      }
      public Builder SetHistoryEntries(int index, global::Gazillion.GiftHistoryEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.historyEntries_[index] = value;
        return this;
      }
      public Builder SetHistoryEntries(int index, global::Gazillion.GiftHistoryEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.historyEntries_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddHistoryEntries(global::Gazillion.GiftHistoryEntry value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.historyEntries_.Add(value);
        return this;
      }
      public Builder AddHistoryEntries(global::Gazillion.GiftHistoryEntry.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.historyEntries_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeHistoryEntries(scg::IEnumerable<global::Gazillion.GiftHistoryEntry> values) {
        PrepareBuilder();
        result.historyEntries_.Add(values);
        return this;
      }
      public Builder ClearHistoryEntries() {
        PrepareBuilder();
        result.historyEntries_.Clear();
        return this;
      }
    }
    static GiftHistoryForPlayerEntry() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AwardItem : pb::GeneratedMessage<AwardItem, AwardItem.Builder> {
    private AwardItem() { }
    private static readonly AwardItem defaultInstance = new AwardItem().MakeReadOnly();
    private static readonly string[] _awardItemFieldNames = new string[] { "awardId", "quantity", "skuId" };
    private static readonly uint[] _awardItemFieldTags = new uint[] { 10, 24, 16 };
    public static AwardItem DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AwardItem DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AwardItem ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_AwardItem__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AwardItem, AwardItem.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_AwardItem__FieldAccessorTable; }
    }
    
    public const int AwardIdFieldNumber = 1;
    private bool hasAwardId;
    private string awardId_ = "";
    public bool HasAwardId {
      get { return hasAwardId; }
    }
    public string AwardId {
      get { return awardId_; }
    }
    
    public const int SkuIdFieldNumber = 2;
    private bool hasSkuId;
    private long skuId_;
    public bool HasSkuId {
      get { return hasSkuId; }
    }
    public long SkuId {
      get { return skuId_; }
    }
    
    public const int QuantityFieldNumber = 3;
    private bool hasQuantity;
    private long quantity_;
    public bool HasQuantity {
      get { return hasQuantity; }
    }
    public long Quantity {
      get { return quantity_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAwardId) return false;
        if (!hasSkuId) return false;
        if (!hasQuantity) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _awardItemFieldNames;
      if (hasAwardId) {
        output.WriteString(1, field_names[0], AwardId);
      }
      if (hasSkuId) {
        output.WriteInt64(2, field_names[2], SkuId);
      }
      if (hasQuantity) {
        output.WriteInt64(3, field_names[1], Quantity);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAwardId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AwardId);
      }
      if (hasSkuId) {
        size += pb::CodedOutputStream.ComputeInt64Size(2, SkuId);
      }
      if (hasQuantity) {
        size += pb::CodedOutputStream.ComputeInt64Size(3, Quantity);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AwardItem ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AwardItem ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AwardItem ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AwardItem ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AwardItem ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AwardItem ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AwardItem ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AwardItem ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AwardItem ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AwardItem ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AwardItem MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AwardItem prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AwardItem, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AwardItem cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AwardItem result;
      
      private AwardItem PrepareBuilder() {
        if (resultIsReadOnly) {
          AwardItem original = result;
          result = new AwardItem();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AwardItem MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.AwardItem.Descriptor; }
      }
      
      public override AwardItem DefaultInstanceForType {
        get { return global::Gazillion.AwardItem.DefaultInstance; }
      }
      
      public override AwardItem BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AwardItem) {
          return MergeFrom((AwardItem) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AwardItem other) {
        if (other == global::Gazillion.AwardItem.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAwardId) {
          AwardId = other.AwardId;
        }
        if (other.HasSkuId) {
          SkuId = other.SkuId;
        }
        if (other.HasQuantity) {
          Quantity = other.Quantity;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_awardItemFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _awardItemFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAwardId = input.ReadString(ref result.awardId_);
              break;
            }
            case 16: {
              result.hasSkuId = input.ReadInt64(ref result.skuId_);
              break;
            }
            case 24: {
              result.hasQuantity = input.ReadInt64(ref result.quantity_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAwardId {
        get { return result.hasAwardId; }
      }
      public string AwardId {
        get { return result.AwardId; }
        set { SetAwardId(value); }
      }
      public Builder SetAwardId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAwardId = true;
        result.awardId_ = value;
        return this;
      }
      public Builder ClearAwardId() {
        PrepareBuilder();
        result.hasAwardId = false;
        result.awardId_ = "";
        return this;
      }
      
      public bool HasSkuId {
        get { return result.hasSkuId; }
      }
      public long SkuId {
        get { return result.SkuId; }
        set { SetSkuId(value); }
      }
      public Builder SetSkuId(long value) {
        PrepareBuilder();
        result.hasSkuId = true;
        result.skuId_ = value;
        return this;
      }
      public Builder ClearSkuId() {
        PrepareBuilder();
        result.hasSkuId = false;
        result.skuId_ = 0L;
        return this;
      }
      
      public bool HasQuantity {
        get { return result.hasQuantity; }
      }
      public long Quantity {
        get { return result.Quantity; }
        set { SetQuantity(value); }
      }
      public Builder SetQuantity(long value) {
        PrepareBuilder();
        result.hasQuantity = true;
        result.quantity_ = value;
        return this;
      }
      public Builder ClearQuantity() {
        PrepareBuilder();
        result.hasQuantity = false;
        result.quantity_ = 0L;
        return this;
      }
    }
    static AwardItem() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AwardCouponDescription : pb::GeneratedMessage<AwardCouponDescription, AwardCouponDescription.Builder> {
    private AwardCouponDescription() { }
    private static readonly AwardCouponDescription defaultInstance = new AwardCouponDescription().MakeReadOnly();
    private static readonly string[] _awardCouponDescriptionFieldNames = new string[] { "description", "localeId" };
    private static readonly uint[] _awardCouponDescriptionFieldTags = new uint[] { 18, 10 };
    public static AwardCouponDescription DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AwardCouponDescription DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AwardCouponDescription ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_AwardCouponDescription__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AwardCouponDescription, AwardCouponDescription.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_AwardCouponDescription__FieldAccessorTable; }
    }
    
    public const int LocaleIdFieldNumber = 1;
    private bool hasLocaleId;
    private string localeId_ = "";
    public bool HasLocaleId {
      get { return hasLocaleId; }
    }
    public string LocaleId {
      get { return localeId_; }
    }
    
    public const int DescriptionFieldNumber = 2;
    private bool hasDescription;
    private string description_ = "";
    public bool HasDescription {
      get { return hasDescription; }
    }
    public string Description {
      get { return description_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasLocaleId) return false;
        if (!hasDescription) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _awardCouponDescriptionFieldNames;
      if (hasLocaleId) {
        output.WriteString(1, field_names[1], LocaleId);
      }
      if (hasDescription) {
        output.WriteString(2, field_names[0], Description);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasLocaleId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, LocaleId);
      }
      if (hasDescription) {
        size += pb::CodedOutputStream.ComputeStringSize(2, Description);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AwardCouponDescription ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AwardCouponDescription ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AwardCouponDescription ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AwardCouponDescription ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AwardCouponDescription ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AwardCouponDescription ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AwardCouponDescription ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AwardCouponDescription ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AwardCouponDescription ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AwardCouponDescription ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AwardCouponDescription MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AwardCouponDescription prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AwardCouponDescription, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AwardCouponDescription cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AwardCouponDescription result;
      
      private AwardCouponDescription PrepareBuilder() {
        if (resultIsReadOnly) {
          AwardCouponDescription original = result;
          result = new AwardCouponDescription();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AwardCouponDescription MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.AwardCouponDescription.Descriptor; }
      }
      
      public override AwardCouponDescription DefaultInstanceForType {
        get { return global::Gazillion.AwardCouponDescription.DefaultInstance; }
      }
      
      public override AwardCouponDescription BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AwardCouponDescription) {
          return MergeFrom((AwardCouponDescription) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AwardCouponDescription other) {
        if (other == global::Gazillion.AwardCouponDescription.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasLocaleId) {
          LocaleId = other.LocaleId;
        }
        if (other.HasDescription) {
          Description = other.Description;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_awardCouponDescriptionFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _awardCouponDescriptionFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasLocaleId = input.ReadString(ref result.localeId_);
              break;
            }
            case 18: {
              result.hasDescription = input.ReadString(ref result.description_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasLocaleId {
        get { return result.hasLocaleId; }
      }
      public string LocaleId {
        get { return result.LocaleId; }
        set { SetLocaleId(value); }
      }
      public Builder SetLocaleId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLocaleId = true;
        result.localeId_ = value;
        return this;
      }
      public Builder ClearLocaleId() {
        PrepareBuilder();
        result.hasLocaleId = false;
        result.localeId_ = "";
        return this;
      }
      
      public bool HasDescription {
        get { return result.hasDescription; }
      }
      public string Description {
        get { return result.Description; }
        set { SetDescription(value); }
      }
      public Builder SetDescription(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder ClearDescription() {
        PrepareBuilder();
        result.hasDescription = false;
        result.description_ = "";
        return this;
      }
    }
    static AwardCouponDescription() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AwardCoupon : pb::GeneratedMessage<AwardCoupon, AwardCoupon.Builder> {
    private AwardCoupon() { }
    private static readonly AwardCoupon defaultInstance = new AwardCoupon().MakeReadOnly();
    private static readonly string[] _awardCouponFieldNames = new string[] { "couponId", "couponState", "descriptions", "discount", "expirationDateUtc", "wsec" };
    private static readonly uint[] _awardCouponFieldTags = new uint[] { 10, 26, 42, 21, 32, 48 };
    public static AwardCoupon DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AwardCoupon DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AwardCoupon ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_AwardCoupon__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AwardCoupon, AwardCoupon.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_AwardCoupon__FieldAccessorTable; }
    }
    
    public const int CouponIdFieldNumber = 1;
    private bool hasCouponId;
    private string couponId_ = "";
    public bool HasCouponId {
      get { return hasCouponId; }
    }
    public string CouponId {
      get { return couponId_; }
    }
    
    public const int DiscountFieldNumber = 2;
    private bool hasDiscount;
    private float discount_;
    public bool HasDiscount {
      get { return hasDiscount; }
    }
    public float Discount {
      get { return discount_; }
    }
    
    public const int CouponStateFieldNumber = 3;
    private bool hasCouponState;
    private string couponState_ = "";
    public bool HasCouponState {
      get { return hasCouponState; }
    }
    public string CouponState {
      get { return couponState_; }
    }
    
    public const int ExpirationDateUtcFieldNumber = 4;
    private bool hasExpirationDateUtc;
    private long expirationDateUtc_;
    public bool HasExpirationDateUtc {
      get { return hasExpirationDateUtc; }
    }
    public long ExpirationDateUtc {
      get { return expirationDateUtc_; }
    }
    
    public const int DescriptionsFieldNumber = 5;
    private pbc::PopsicleList<global::Gazillion.AwardCouponDescription> descriptions_ = new pbc::PopsicleList<global::Gazillion.AwardCouponDescription>();
    public scg::IList<global::Gazillion.AwardCouponDescription> DescriptionsList {
      get { return descriptions_; }
    }
    public int DescriptionsCount {
      get { return descriptions_.Count; }
    }
    public global::Gazillion.AwardCouponDescription GetDescriptions(int index) {
      return descriptions_[index];
    }
    
    public const int WsecFieldNumber = 6;
    private bool hasWsec;
    private long wsec_;
    public bool HasWsec {
      get { return hasWsec; }
    }
    public long Wsec {
      get { return wsec_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCouponId) return false;
        if (!hasDiscount) return false;
        if (!hasCouponState) return false;
        if (!hasExpirationDateUtc) return false;
        if (!hasWsec) return false;
        foreach (global::Gazillion.AwardCouponDescription element in DescriptionsList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _awardCouponFieldNames;
      if (hasCouponId) {
        output.WriteString(1, field_names[0], CouponId);
      }
      if (hasDiscount) {
        output.WriteFloat(2, field_names[3], Discount);
      }
      if (hasCouponState) {
        output.WriteString(3, field_names[1], CouponState);
      }
      if (hasExpirationDateUtc) {
        output.WriteInt64(4, field_names[4], ExpirationDateUtc);
      }
      if (descriptions_.Count > 0) {
        output.WriteMessageArray(5, field_names[2], descriptions_);
      }
      if (hasWsec) {
        output.WriteInt64(6, field_names[5], Wsec);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasCouponId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, CouponId);
      }
      if (hasDiscount) {
        size += pb::CodedOutputStream.ComputeFloatSize(2, Discount);
      }
      if (hasCouponState) {
        size += pb::CodedOutputStream.ComputeStringSize(3, CouponState);
      }
      if (hasExpirationDateUtc) {
        size += pb::CodedOutputStream.ComputeInt64Size(4, ExpirationDateUtc);
      }
      foreach (global::Gazillion.AwardCouponDescription element in DescriptionsList) {
        size += pb::CodedOutputStream.ComputeMessageSize(5, element);
      }
      if (hasWsec) {
        size += pb::CodedOutputStream.ComputeInt64Size(6, Wsec);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AwardCoupon ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AwardCoupon ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AwardCoupon ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AwardCoupon ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AwardCoupon ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AwardCoupon ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AwardCoupon ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AwardCoupon ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AwardCoupon ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AwardCoupon ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AwardCoupon MakeReadOnly() {
      descriptions_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AwardCoupon prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AwardCoupon, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AwardCoupon cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AwardCoupon result;
      
      private AwardCoupon PrepareBuilder() {
        if (resultIsReadOnly) {
          AwardCoupon original = result;
          result = new AwardCoupon();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AwardCoupon MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.AwardCoupon.Descriptor; }
      }
      
      public override AwardCoupon DefaultInstanceForType {
        get { return global::Gazillion.AwardCoupon.DefaultInstance; }
      }
      
      public override AwardCoupon BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AwardCoupon) {
          return MergeFrom((AwardCoupon) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AwardCoupon other) {
        if (other == global::Gazillion.AwardCoupon.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasCouponId) {
          CouponId = other.CouponId;
        }
        if (other.HasDiscount) {
          Discount = other.Discount;
        }
        if (other.HasCouponState) {
          CouponState = other.CouponState;
        }
        if (other.HasExpirationDateUtc) {
          ExpirationDateUtc = other.ExpirationDateUtc;
        }
        if (other.descriptions_.Count != 0) {
          result.descriptions_.Add(other.descriptions_);
        }
        if (other.HasWsec) {
          Wsec = other.Wsec;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_awardCouponFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _awardCouponFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasCouponId = input.ReadString(ref result.couponId_);
              break;
            }
            case 21: {
              result.hasDiscount = input.ReadFloat(ref result.discount_);
              break;
            }
            case 26: {
              result.hasCouponState = input.ReadString(ref result.couponState_);
              break;
            }
            case 32: {
              result.hasExpirationDateUtc = input.ReadInt64(ref result.expirationDateUtc_);
              break;
            }
            case 42: {
              input.ReadMessageArray(tag, field_name, result.descriptions_, global::Gazillion.AwardCouponDescription.DefaultInstance, extensionRegistry);
              break;
            }
            case 48: {
              result.hasWsec = input.ReadInt64(ref result.wsec_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasCouponId {
        get { return result.hasCouponId; }
      }
      public string CouponId {
        get { return result.CouponId; }
        set { SetCouponId(value); }
      }
      public Builder SetCouponId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCouponId = true;
        result.couponId_ = value;
        return this;
      }
      public Builder ClearCouponId() {
        PrepareBuilder();
        result.hasCouponId = false;
        result.couponId_ = "";
        return this;
      }
      
      public bool HasDiscount {
        get { return result.hasDiscount; }
      }
      public float Discount {
        get { return result.Discount; }
        set { SetDiscount(value); }
      }
      public Builder SetDiscount(float value) {
        PrepareBuilder();
        result.hasDiscount = true;
        result.discount_ = value;
        return this;
      }
      public Builder ClearDiscount() {
        PrepareBuilder();
        result.hasDiscount = false;
        result.discount_ = 0F;
        return this;
      }
      
      public bool HasCouponState {
        get { return result.hasCouponState; }
      }
      public string CouponState {
        get { return result.CouponState; }
        set { SetCouponState(value); }
      }
      public Builder SetCouponState(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCouponState = true;
        result.couponState_ = value;
        return this;
      }
      public Builder ClearCouponState() {
        PrepareBuilder();
        result.hasCouponState = false;
        result.couponState_ = "";
        return this;
      }
      
      public bool HasExpirationDateUtc {
        get { return result.hasExpirationDateUtc; }
      }
      public long ExpirationDateUtc {
        get { return result.ExpirationDateUtc; }
        set { SetExpirationDateUtc(value); }
      }
      public Builder SetExpirationDateUtc(long value) {
        PrepareBuilder();
        result.hasExpirationDateUtc = true;
        result.expirationDateUtc_ = value;
        return this;
      }
      public Builder ClearExpirationDateUtc() {
        PrepareBuilder();
        result.hasExpirationDateUtc = false;
        result.expirationDateUtc_ = 0L;
        return this;
      }
      
      public pbc::IPopsicleList<global::Gazillion.AwardCouponDescription> DescriptionsList {
        get { return PrepareBuilder().descriptions_; }
      }
      public int DescriptionsCount {
        get { return result.DescriptionsCount; }
      }
      public global::Gazillion.AwardCouponDescription GetDescriptions(int index) {
        return result.GetDescriptions(index);
      }
      public Builder SetDescriptions(int index, global::Gazillion.AwardCouponDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.descriptions_[index] = value;
        return this;
      }
      public Builder SetDescriptions(int index, global::Gazillion.AwardCouponDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.descriptions_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddDescriptions(global::Gazillion.AwardCouponDescription value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.descriptions_.Add(value);
        return this;
      }
      public Builder AddDescriptions(global::Gazillion.AwardCouponDescription.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.descriptions_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeDescriptions(scg::IEnumerable<global::Gazillion.AwardCouponDescription> values) {
        PrepareBuilder();
        result.descriptions_.Add(values);
        return this;
      }
      public Builder ClearDescriptions() {
        PrepareBuilder();
        result.descriptions_.Clear();
        return this;
      }
      
      public bool HasWsec {
        get { return result.hasWsec; }
      }
      public long Wsec {
        get { return result.Wsec; }
        set { SetWsec(value); }
      }
      public Builder SetWsec(long value) {
        PrepareBuilder();
        result.hasWsec = true;
        result.wsec_ = value;
        return this;
      }
      public Builder ClearWsec() {
        PrepareBuilder();
        result.hasWsec = false;
        result.wsec_ = 0L;
        return this;
      }
    }
    static AwardCoupon() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class AwardEntry : pb::GeneratedMessage<AwardEntry, AwardEntry.Builder> {
    private AwardEntry() { }
    private static readonly AwardEntry defaultInstance = new AwardEntry().MakeReadOnly();
    private static readonly string[] _awardEntryFieldNames = new string[] { "awardType", "coupon", "item" };
    private static readonly uint[] _awardEntryFieldTags = new uint[] { 10, 26, 18 };
    public static AwardEntry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override AwardEntry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override AwardEntry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_AwardEntry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<AwardEntry, AwardEntry.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_AwardEntry__FieldAccessorTable; }
    }
    
    public const int AwardTypeFieldNumber = 1;
    private bool hasAwardType;
    private string awardType_ = "";
    public bool HasAwardType {
      get { return hasAwardType; }
    }
    public string AwardType {
      get { return awardType_; }
    }
    
    public const int ItemFieldNumber = 2;
    private bool hasItem;
    private global::Gazillion.AwardItem item_;
    public bool HasItem {
      get { return hasItem; }
    }
    public global::Gazillion.AwardItem Item {
      get { return item_ ?? global::Gazillion.AwardItem.DefaultInstance; }
    }
    
    public const int CouponFieldNumber = 3;
    private bool hasCoupon;
    private global::Gazillion.AwardCoupon coupon_;
    public bool HasCoupon {
      get { return hasCoupon; }
    }
    public global::Gazillion.AwardCoupon Coupon {
      get { return coupon_ ?? global::Gazillion.AwardCoupon.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAwardType) return false;
        if (HasItem) {
          if (!Item.IsInitialized) return false;
        }
        if (HasCoupon) {
          if (!Coupon.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _awardEntryFieldNames;
      if (hasAwardType) {
        output.WriteString(1, field_names[0], AwardType);
      }
      if (hasItem) {
        output.WriteMessage(2, field_names[2], Item);
      }
      if (hasCoupon) {
        output.WriteMessage(3, field_names[1], Coupon);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasAwardType) {
        size += pb::CodedOutputStream.ComputeStringSize(1, AwardType);
      }
      if (hasItem) {
        size += pb::CodedOutputStream.ComputeMessageSize(2, Item);
      }
      if (hasCoupon) {
        size += pb::CodedOutputStream.ComputeMessageSize(3, Coupon);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static AwardEntry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AwardEntry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AwardEntry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static AwardEntry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static AwardEntry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AwardEntry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static AwardEntry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static AwardEntry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static AwardEntry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static AwardEntry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private AwardEntry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(AwardEntry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<AwardEntry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(AwardEntry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private AwardEntry result;
      
      private AwardEntry PrepareBuilder() {
        if (resultIsReadOnly) {
          AwardEntry original = result;
          result = new AwardEntry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override AwardEntry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.AwardEntry.Descriptor; }
      }
      
      public override AwardEntry DefaultInstanceForType {
        get { return global::Gazillion.AwardEntry.DefaultInstance; }
      }
      
      public override AwardEntry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is AwardEntry) {
          return MergeFrom((AwardEntry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(AwardEntry other) {
        if (other == global::Gazillion.AwardEntry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAwardType) {
          AwardType = other.AwardType;
        }
        if (other.HasItem) {
          MergeItem(other.Item);
        }
        if (other.HasCoupon) {
          MergeCoupon(other.Coupon);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_awardEntryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _awardEntryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAwardType = input.ReadString(ref result.awardType_);
              break;
            }
            case 18: {
              global::Gazillion.AwardItem.Builder subBuilder = global::Gazillion.AwardItem.CreateBuilder();
              if (result.hasItem) {
                subBuilder.MergeFrom(Item);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Item = subBuilder.BuildPartial();
              break;
            }
            case 26: {
              global::Gazillion.AwardCoupon.Builder subBuilder = global::Gazillion.AwardCoupon.CreateBuilder();
              if (result.hasCoupon) {
                subBuilder.MergeFrom(Coupon);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              Coupon = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAwardType {
        get { return result.hasAwardType; }
      }
      public string AwardType {
        get { return result.AwardType; }
        set { SetAwardType(value); }
      }
      public Builder SetAwardType(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAwardType = true;
        result.awardType_ = value;
        return this;
      }
      public Builder ClearAwardType() {
        PrepareBuilder();
        result.hasAwardType = false;
        result.awardType_ = "";
        return this;
      }
      
      public bool HasItem {
       get { return result.hasItem; }
      }
      public global::Gazillion.AwardItem Item {
        get { return result.Item; }
        set { SetItem(value); }
      }
      public Builder SetItem(global::Gazillion.AwardItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasItem = true;
        result.item_ = value;
        return this;
      }
      public Builder SetItem(global::Gazillion.AwardItem.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasItem = true;
        result.item_ = builderForValue.Build();
        return this;
      }
      public Builder MergeItem(global::Gazillion.AwardItem value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasItem &&
            result.item_ != global::Gazillion.AwardItem.DefaultInstance) {
            result.item_ = global::Gazillion.AwardItem.CreateBuilder(result.item_).MergeFrom(value).BuildPartial();
        } else {
          result.item_ = value;
        }
        result.hasItem = true;
        return this;
      }
      public Builder ClearItem() {
        PrepareBuilder();
        result.hasItem = false;
        result.item_ = null;
        return this;
      }
      
      public bool HasCoupon {
       get { return result.hasCoupon; }
      }
      public global::Gazillion.AwardCoupon Coupon {
        get { return result.Coupon; }
        set { SetCoupon(value); }
      }
      public Builder SetCoupon(global::Gazillion.AwardCoupon value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCoupon = true;
        result.coupon_ = value;
        return this;
      }
      public Builder SetCoupon(global::Gazillion.AwardCoupon.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasCoupon = true;
        result.coupon_ = builderForValue.Build();
        return this;
      }
      public Builder MergeCoupon(global::Gazillion.AwardCoupon value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasCoupon &&
            result.coupon_ != global::Gazillion.AwardCoupon.DefaultInstance) {
            result.coupon_ = global::Gazillion.AwardCoupon.CreateBuilder(result.coupon_).MergeFrom(value).BuildPartial();
        } else {
          result.coupon_ = value;
        }
        result.hasCoupon = true;
        return this;
      }
      public Builder ClearCoupon() {
        PrepareBuilder();
        result.hasCoupon = false;
        result.coupon_ = null;
        return this;
      }
    }
    static AwardEntry() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BillingPlayStationUpdateEntitlementStatus : pb::GeneratedMessage<BillingPlayStationUpdateEntitlementStatus, BillingPlayStationUpdateEntitlementStatus.Builder> {
    private BillingPlayStationUpdateEntitlementStatus() { }
    private static readonly BillingPlayStationUpdateEntitlementStatus defaultInstance = new BillingPlayStationUpdateEntitlementStatus().MakeReadOnly();
    private static readonly string[] _billingPlayStationUpdateEntitlementStatusFieldNames = new string[] { "EntitlementId", "UseCount", "UseLimit" };
    private static readonly uint[] _billingPlayStationUpdateEntitlementStatusFieldTags = new uint[] { 10, 16, 24 };
    public static BillingPlayStationUpdateEntitlementStatus DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BillingPlayStationUpdateEntitlementStatus DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BillingPlayStationUpdateEntitlementStatus ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatus__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BillingPlayStationUpdateEntitlementStatus, BillingPlayStationUpdateEntitlementStatus.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatus__FieldAccessorTable; }
    }
    
    public const int EntitlementIdFieldNumber = 1;
    private bool hasEntitlementId;
    private string entitlementId_ = "";
    public bool HasEntitlementId {
      get { return hasEntitlementId; }
    }
    public string EntitlementId {
      get { return entitlementId_; }
    }
    
    public const int UseCountFieldNumber = 2;
    private bool hasUseCount;
    private int useCount_;
    public bool HasUseCount {
      get { return hasUseCount; }
    }
    public int UseCount {
      get { return useCount_; }
    }
    
    public const int UseLimitFieldNumber = 3;
    private bool hasUseLimit;
    private int useLimit_;
    public bool HasUseLimit {
      get { return hasUseLimit; }
    }
    public int UseLimit {
      get { return useLimit_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntitlementId) return false;
        if (!hasUseCount) return false;
        if (!hasUseLimit) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _billingPlayStationUpdateEntitlementStatusFieldNames;
      if (hasEntitlementId) {
        output.WriteString(1, field_names[0], EntitlementId);
      }
      if (hasUseCount) {
        output.WriteInt32(2, field_names[1], UseCount);
      }
      if (hasUseLimit) {
        output.WriteInt32(3, field_names[2], UseLimit);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEntitlementId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, EntitlementId);
      }
      if (hasUseCount) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, UseCount);
      }
      if (hasUseLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, UseLimit);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BillingPlayStationUpdateEntitlementStatus ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatus ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatus ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatus ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatus ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatus ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatus ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatus ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatus ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatus ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BillingPlayStationUpdateEntitlementStatus MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BillingPlayStationUpdateEntitlementStatus prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BillingPlayStationUpdateEntitlementStatus, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BillingPlayStationUpdateEntitlementStatus cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BillingPlayStationUpdateEntitlementStatus result;
      
      private BillingPlayStationUpdateEntitlementStatus PrepareBuilder() {
        if (resultIsReadOnly) {
          BillingPlayStationUpdateEntitlementStatus original = result;
          result = new BillingPlayStationUpdateEntitlementStatus();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BillingPlayStationUpdateEntitlementStatus MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.BillingPlayStationUpdateEntitlementStatus.Descriptor; }
      }
      
      public override BillingPlayStationUpdateEntitlementStatus DefaultInstanceForType {
        get { return global::Gazillion.BillingPlayStationUpdateEntitlementStatus.DefaultInstance; }
      }
      
      public override BillingPlayStationUpdateEntitlementStatus BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BillingPlayStationUpdateEntitlementStatus) {
          return MergeFrom((BillingPlayStationUpdateEntitlementStatus) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BillingPlayStationUpdateEntitlementStatus other) {
        if (other == global::Gazillion.BillingPlayStationUpdateEntitlementStatus.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntitlementId) {
          EntitlementId = other.EntitlementId;
        }
        if (other.HasUseCount) {
          UseCount = other.UseCount;
        }
        if (other.HasUseLimit) {
          UseLimit = other.UseLimit;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_billingPlayStationUpdateEntitlementStatusFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _billingPlayStationUpdateEntitlementStatusFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasEntitlementId = input.ReadString(ref result.entitlementId_);
              break;
            }
            case 16: {
              result.hasUseCount = input.ReadInt32(ref result.useCount_);
              break;
            }
            case 24: {
              result.hasUseLimit = input.ReadInt32(ref result.useLimit_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntitlementId {
        get { return result.hasEntitlementId; }
      }
      public string EntitlementId {
        get { return result.EntitlementId; }
        set { SetEntitlementId(value); }
      }
      public Builder SetEntitlementId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntitlementId = true;
        result.entitlementId_ = value;
        return this;
      }
      public Builder ClearEntitlementId() {
        PrepareBuilder();
        result.hasEntitlementId = false;
        result.entitlementId_ = "";
        return this;
      }
      
      public bool HasUseCount {
        get { return result.hasUseCount; }
      }
      public int UseCount {
        get { return result.UseCount; }
        set { SetUseCount(value); }
      }
      public Builder SetUseCount(int value) {
        PrepareBuilder();
        result.hasUseCount = true;
        result.useCount_ = value;
        return this;
      }
      public Builder ClearUseCount() {
        PrepareBuilder();
        result.hasUseCount = false;
        result.useCount_ = 0;
        return this;
      }
      
      public bool HasUseLimit {
        get { return result.hasUseLimit; }
      }
      public int UseLimit {
        get { return result.UseLimit; }
        set { SetUseLimit(value); }
      }
      public Builder SetUseLimit(int value) {
        PrepareBuilder();
        result.hasUseLimit = true;
        result.useLimit_ = value;
        return this;
      }
      public Builder ClearUseLimit() {
        PrepareBuilder();
        result.hasUseLimit = false;
        result.useLimit_ = 0;
        return this;
      }
    }
    static BillingPlayStationUpdateEntitlementStatus() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BillingPlayStationUpdateEntitlementStatusResponse : pb::GeneratedMessage<BillingPlayStationUpdateEntitlementStatusResponse, BillingPlayStationUpdateEntitlementStatusResponse.Builder> {
    private BillingPlayStationUpdateEntitlementStatusResponse() { }
    private static readonly BillingPlayStationUpdateEntitlementStatusResponse defaultInstance = new BillingPlayStationUpdateEntitlementStatusResponse().MakeReadOnly();
    private static readonly string[] _billingPlayStationUpdateEntitlementStatusResponseFieldNames = new string[] { "Consumed", "EntitlementId", "UseCount", "UseLimit" };
    private static readonly uint[] _billingPlayStationUpdateEntitlementStatusResponseFieldTags = new uint[] { 32, 10, 16, 24 };
    public static BillingPlayStationUpdateEntitlementStatusResponse DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BillingPlayStationUpdateEntitlementStatusResponse DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BillingPlayStationUpdateEntitlementStatusResponse ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatusResponse__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BillingPlayStationUpdateEntitlementStatusResponse, BillingPlayStationUpdateEntitlementStatusResponse.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_BillingPlayStationUpdateEntitlementStatusResponse__FieldAccessorTable; }
    }
    
    public const int EntitlementIdFieldNumber = 1;
    private bool hasEntitlementId;
    private string entitlementId_ = "";
    public bool HasEntitlementId {
      get { return hasEntitlementId; }
    }
    public string EntitlementId {
      get { return entitlementId_; }
    }
    
    public const int UseCountFieldNumber = 2;
    private bool hasUseCount;
    private int useCount_;
    public bool HasUseCount {
      get { return hasUseCount; }
    }
    public int UseCount {
      get { return useCount_; }
    }
    
    public const int UseLimitFieldNumber = 3;
    private bool hasUseLimit;
    private int useLimit_;
    public bool HasUseLimit {
      get { return hasUseLimit; }
    }
    public int UseLimit {
      get { return useLimit_; }
    }
    
    public const int ConsumedFieldNumber = 4;
    private bool hasConsumed;
    private bool consumed_;
    public bool HasConsumed {
      get { return hasConsumed; }
    }
    public bool Consumed {
      get { return consumed_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasEntitlementId) return false;
        if (!hasUseCount) return false;
        if (!hasUseLimit) return false;
        if (!hasConsumed) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _billingPlayStationUpdateEntitlementStatusResponseFieldNames;
      if (hasEntitlementId) {
        output.WriteString(1, field_names[1], EntitlementId);
      }
      if (hasUseCount) {
        output.WriteInt32(2, field_names[2], UseCount);
      }
      if (hasUseLimit) {
        output.WriteInt32(3, field_names[3], UseLimit);
      }
      if (hasConsumed) {
        output.WriteBool(4, field_names[0], Consumed);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      if (hasEntitlementId) {
        size += pb::CodedOutputStream.ComputeStringSize(1, EntitlementId);
      }
      if (hasUseCount) {
        size += pb::CodedOutputStream.ComputeInt32Size(2, UseCount);
      }
      if (hasUseLimit) {
        size += pb::CodedOutputStream.ComputeInt32Size(3, UseLimit);
      }
      if (hasConsumed) {
        size += pb::CodedOutputStream.ComputeBoolSize(4, Consumed);
      }
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BillingPlayStationUpdateEntitlementStatusResponse ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatusResponse ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatusResponse ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatusResponse ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatusResponse ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatusResponse ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatusResponse ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatusResponse ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatusResponse ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BillingPlayStationUpdateEntitlementStatusResponse ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BillingPlayStationUpdateEntitlementStatusResponse MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BillingPlayStationUpdateEntitlementStatusResponse prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BillingPlayStationUpdateEntitlementStatusResponse, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BillingPlayStationUpdateEntitlementStatusResponse cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BillingPlayStationUpdateEntitlementStatusResponse result;
      
      private BillingPlayStationUpdateEntitlementStatusResponse PrepareBuilder() {
        if (resultIsReadOnly) {
          BillingPlayStationUpdateEntitlementStatusResponse original = result;
          result = new BillingPlayStationUpdateEntitlementStatusResponse();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BillingPlayStationUpdateEntitlementStatusResponse MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.BillingPlayStationUpdateEntitlementStatusResponse.Descriptor; }
      }
      
      public override BillingPlayStationUpdateEntitlementStatusResponse DefaultInstanceForType {
        get { return global::Gazillion.BillingPlayStationUpdateEntitlementStatusResponse.DefaultInstance; }
      }
      
      public override BillingPlayStationUpdateEntitlementStatusResponse BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BillingPlayStationUpdateEntitlementStatusResponse) {
          return MergeFrom((BillingPlayStationUpdateEntitlementStatusResponse) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BillingPlayStationUpdateEntitlementStatusResponse other) {
        if (other == global::Gazillion.BillingPlayStationUpdateEntitlementStatusResponse.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasEntitlementId) {
          EntitlementId = other.EntitlementId;
        }
        if (other.HasUseCount) {
          UseCount = other.UseCount;
        }
        if (other.HasUseLimit) {
          UseLimit = other.UseLimit;
        }
        if (other.HasConsumed) {
          Consumed = other.Consumed;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_billingPlayStationUpdateEntitlementStatusResponseFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _billingPlayStationUpdateEntitlementStatusResponseFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasEntitlementId = input.ReadString(ref result.entitlementId_);
              break;
            }
            case 16: {
              result.hasUseCount = input.ReadInt32(ref result.useCount_);
              break;
            }
            case 24: {
              result.hasUseLimit = input.ReadInt32(ref result.useLimit_);
              break;
            }
            case 32: {
              result.hasConsumed = input.ReadBool(ref result.consumed_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasEntitlementId {
        get { return result.hasEntitlementId; }
      }
      public string EntitlementId {
        get { return result.EntitlementId; }
        set { SetEntitlementId(value); }
      }
      public Builder SetEntitlementId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasEntitlementId = true;
        result.entitlementId_ = value;
        return this;
      }
      public Builder ClearEntitlementId() {
        PrepareBuilder();
        result.hasEntitlementId = false;
        result.entitlementId_ = "";
        return this;
      }
      
      public bool HasUseCount {
        get { return result.hasUseCount; }
      }
      public int UseCount {
        get { return result.UseCount; }
        set { SetUseCount(value); }
      }
      public Builder SetUseCount(int value) {
        PrepareBuilder();
        result.hasUseCount = true;
        result.useCount_ = value;
        return this;
      }
      public Builder ClearUseCount() {
        PrepareBuilder();
        result.hasUseCount = false;
        result.useCount_ = 0;
        return this;
      }
      
      public bool HasUseLimit {
        get { return result.hasUseLimit; }
      }
      public int UseLimit {
        get { return result.UseLimit; }
        set { SetUseLimit(value); }
      }
      public Builder SetUseLimit(int value) {
        PrepareBuilder();
        result.hasUseLimit = true;
        result.useLimit_ = value;
        return this;
      }
      public Builder ClearUseLimit() {
        PrepareBuilder();
        result.hasUseLimit = false;
        result.useLimit_ = 0;
        return this;
      }
      
      public bool HasConsumed {
        get { return result.hasConsumed; }
      }
      public bool Consumed {
        get { return result.Consumed; }
        set { SetConsumed(value); }
      }
      public Builder SetConsumed(bool value) {
        PrepareBuilder();
        result.hasConsumed = true;
        result.consumed_ = value;
        return this;
      }
      public Builder ClearConsumed() {
        PrepareBuilder();
        result.hasConsumed = false;
        result.consumed_ = false;
        return this;
      }
    }
    static BillingPlayStationUpdateEntitlementStatusResponse() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class BillingPlayStationProcessPendingEntitlementTransactions : pb::GeneratedMessage<BillingPlayStationProcessPendingEntitlementTransactions, BillingPlayStationProcessPendingEntitlementTransactions.Builder> {
    private BillingPlayStationProcessPendingEntitlementTransactions() { }
    private static readonly BillingPlayStationProcessPendingEntitlementTransactions defaultInstance = new BillingPlayStationProcessPendingEntitlementTransactions().MakeReadOnly();
    private static readonly string[] _billingPlayStationProcessPendingEntitlementTransactionsFieldNames = new string[] {  };
    private static readonly uint[] _billingPlayStationProcessPendingEntitlementTransactionsFieldTags = new uint[] {  };
    public static BillingPlayStationProcessPendingEntitlementTransactions DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override BillingPlayStationProcessPendingEntitlementTransactions DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override BillingPlayStationProcessPendingEntitlementTransactions ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_BillingPlayStationProcessPendingEntitlementTransactions__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<BillingPlayStationProcessPendingEntitlementTransactions, BillingPlayStationProcessPendingEntitlementTransactions.Builder> InternalFieldAccessors {
      get { return global::Gazillion.BillingCommon.internal__static_Gazillion_BillingPlayStationProcessPendingEntitlementTransactions__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      CalcSerializedSize();
      string[] field_names = _billingPlayStationProcessPendingEntitlementTransactionsFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        return CalcSerializedSize();
      }
    }
    
    private int CalcSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      
      size = 0;
      size += UnknownFields.SerializedSize;
      memoizedSerializedSize = size;
      return size;
    }
    public static BillingPlayStationProcessPendingEntitlementTransactions ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BillingPlayStationProcessPendingEntitlementTransactions ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BillingPlayStationProcessPendingEntitlementTransactions ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static BillingPlayStationProcessPendingEntitlementTransactions ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static BillingPlayStationProcessPendingEntitlementTransactions ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BillingPlayStationProcessPendingEntitlementTransactions ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static BillingPlayStationProcessPendingEntitlementTransactions ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static BillingPlayStationProcessPendingEntitlementTransactions ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static BillingPlayStationProcessPendingEntitlementTransactions ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static BillingPlayStationProcessPendingEntitlementTransactions ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private BillingPlayStationProcessPendingEntitlementTransactions MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(BillingPlayStationProcessPendingEntitlementTransactions prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<BillingPlayStationProcessPendingEntitlementTransactions, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(BillingPlayStationProcessPendingEntitlementTransactions cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private BillingPlayStationProcessPendingEntitlementTransactions result;
      
      private BillingPlayStationProcessPendingEntitlementTransactions PrepareBuilder() {
        if (resultIsReadOnly) {
          BillingPlayStationProcessPendingEntitlementTransactions original = result;
          result = new BillingPlayStationProcessPendingEntitlementTransactions();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override BillingPlayStationProcessPendingEntitlementTransactions MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::Gazillion.BillingPlayStationProcessPendingEntitlementTransactions.Descriptor; }
      }
      
      public override BillingPlayStationProcessPendingEntitlementTransactions DefaultInstanceForType {
        get { return global::Gazillion.BillingPlayStationProcessPendingEntitlementTransactions.DefaultInstance; }
      }
      
      public override BillingPlayStationProcessPendingEntitlementTransactions BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is BillingPlayStationProcessPendingEntitlementTransactions) {
          return MergeFrom((BillingPlayStationProcessPendingEntitlementTransactions) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(BillingPlayStationProcessPendingEntitlementTransactions other) {
        if (other == global::Gazillion.BillingPlayStationProcessPendingEntitlementTransactions.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_billingPlayStationProcessPendingEntitlementTransactionsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _billingPlayStationProcessPendingEntitlementTransactionsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static BillingPlayStationProcessPendingEntitlementTransactions() {
      object.ReferenceEquals(global::Gazillion.BillingCommon.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
